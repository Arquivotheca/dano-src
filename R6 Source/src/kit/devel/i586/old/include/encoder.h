#ifndef __ENCODER_H__
#define __ENCODER_H__
typedef enum
{
	AAA,
	AAD,
	AAM,
	AAS,
	ADCB,
	ADCW,
	ADCL,
	ADC,
	ADDB,
	ADDW,
	ADDL,
	ADD,
	ANDB,
	ANDW,
	ANDL,
	AND,
	ARPL,
	BOUNDW,
	BOUNDL,
	BOUND,
	BSFW,
	BSFL,
	BSF,
	BSRW,
	BSRL,
	BSR,
	BSWAP,
	BTW,
	BTL,
	BT,
	BTCW,
	BTCL,
	BTC,
	BTRW,
	BTRL,
	BTR,
	BTSW,
	BTSL,
	BTS,
	LCALL,
	CALL,
	CBTW,
	CWTL,
	CWT,
	CFLSH,
	CLC,
	CLD,
	CLI,
	CLTS,
	CMC,
	CMOVAW,
	CMOVAEW,
	CMOVBW,
	CMOVBEW,
	CMOVCW,
	CMOVEW,
	CMOVGW,
	CMOVGEW,
	CMOVLW,
	CMOVLEW,
	CMOVNAW,
	CMOVNAEW,
	CMOVNBW,
	CMOVNBEW,
	CMOVNCW,
	CMOVNEW,
	CMOVNGW,
	CMOVNGEW,
	CMOVNLW,
	CMOVNLEW,
	CMOVNOW,
	CMOVNPW,
	CMOVNSW,
	CMOVNZW,
	CMOVOW,
	CMOVPW,
	CMOVPEW,
	CMOVPOW,
	CMOVSW,
	CMOVZW,
	CMOVAL,
	CMOVAEL,
	CMOVBL,
	CMOVBEL,
	CMOVCL,
	CMOVEL,
	CMOVGL,
	CMOVGEL,
	CMOVLL,
	CMOVLEL,
	CMOVNAL,
	CMOVNAEL,
	CMOVNBL,
	CMOVNBEL,
	CMOVNCL,
	CMOVNEL,
	CMOVNGL,
	CMOVNGEL,
	CMOVNLL,
	CMOVNLEL,
	CMOVNOL,
	CMOVNPL,
	CMOVNSL,
	CMOVNZL,
	CMOVOL,
	CMOVPL,
	CMOVPEL,
	CMOVPOL,
	CMOVSL,
	CMOVZL,
	CMOVA,
	CMOVAE,
	CMOVB,
	CMOVBE,
	CMOVC,
	CMOVE,
	CMOVG,
	CMOVGE,
	CMOVL,
	CMOVLE,
	CMOVNA,
	CMOVNAE,
	CMOVNB,
	CMOVNBE,
	CMOVNC,
	CMOVNE,
	CMOVNG,
	CMOVNGE,
	CMOVNL,
	CMOVNLE,
	CMOVNO,
	CMOVNP,
	CMOVNS,
	CMOVNZ,
	CMOVO,
	CMOVP,
	CMOVPE,
	CMOVPO,
	CMOVS,
	CMOVZ,
	CMPB,
	CMPW,
	CMPL,
	CMP,
	CMPSB,
	REPE_CMPSB,
	REPNE_CMPSB,
	CMPSW,
	REPE_CMPSW,
	REPNE_CMPSW,
	CMPSL,
	REPE_CMPSL,
	REPNE_CMPSL,
	CMPS,
	CMPXCHGB,
	CMPXCHGW,
	CMPXCHGL,
	CMPXCHG,
	CMPXCHG8B,
	CPUID,
	CWTD,
	CLTD,
	DAA,
	DAS,
	DECB,
	DECW,
	DECL,
	DEC,
	DIVB,
	DIVW,
	DIVL,
	DIV,
	ENTER,
	HLT,
	IDIVB,
	IDIVW,
	IDIVL,
	IDIV,
	IMULB,
	IMULW,
	IMULL,
	IMUL,
	INB,
	INW,
	INL,
	IN_x86,
	INCB,
	INCW,
	INCL,
	INC,
	INSB,
	REP_INSB,
	INSW,
	REP_INSW,
	INSL,
	REP_INSL,
	INS,
	INT_x86,
	INTO_x86,
	INVD,
	INVLPG,
	IRETW,
	IRET,
	JA,
	JAE,
	JB,
	JBE,
	JC,
	JCXZ,
	JE,
	JZ,
	JG,
	JGE,
	JL,
	JLE,
	JNA,
	JNAE,
	JNB,
	JNBE,
	JNC,
	JNE,
	JNG,
	JNGE,
	JNL,
	JNLE,
	JNO,
	JNP,
	JNS,
	JNZ,
	JO,
	JP,
	JPE,
	JPO,
	JS,
	JMP,
	LJMP,
	JMPF,
	LAHF,
	LARW,
	LARL,
	LDSW,
	LDSL,
	LDS,
	LESW,
	LESL,
	LES,
	LSSW,
	LSSL,
	LSS,
	LFSW,
	LFSL,
	LFS,
	LGSW,
	LGSL,
	LGS,
	LEAW,
	LEAL,
	LEA,
	LEAVEN,
	LEAVE,
	LGDT,
	LIDT,
	LLDT,
	LMSW,
	LODSB,
	REP_LODSB,
	LODSW,
	REP_LODSW,
	LODSL,
	REP_LODSL,
	LODS,
	LOCK,
	LOOP,
	LOOPZ,
	LOOPNZ,
	LOOPE,
	LOOPNE,
	LSLW,
	LSLL,
	LSL,
	LTR,
	MOVB,
	MOVW,
	MOVL,
	MOV,
	MOVSB,
	REP_MOVSB,
	MOVSW,
	REP_MOVSW,
	MOVSL,
	REP_MOVSL,
	MOVS,
	MOVSBW,
	MOVSBL,
	MOVSWW,
	MOVSWL,
	MOVZBW,
	MOVZBL,
	MOVZWW,
	MOVZWL,
	MULB,
	MULW,
	MULL,
	MUL,
	NEGB,
	NEGW,
	NEGL,
	NEG,
	NOTB,
	NOTW,
	NOTL,
	NOT,
	ORB,
	ORW,
	ORL,
	OR,
	OUTB,
	OUTW,
	OUTL,
	OUT_x86,
	OUTSB,
	REP_OUTSB,
	OUTSW,
	REP_OUTSW,
	OUTSL,
	REP_OUTSL,
	OUTS,
	POPW,
	POPL,
	POP,
	POPAW,
	POPAL,
	POPA,
	POPFW,
	POPFL,
	POPF,
	PUSHW,
	PUSHL,
	PUSH,
	PUSHAW,
	PUSHAL,
	PUSHA,
	PUSHFW,
	PUSHFL,
	PUSHF,
	RCLB,
	RCLW,
	RCLL,
	RCL,
	RCRB,
	RCRW,
	RCRL,
	RCR,
	ROLB,
	ROLW,
	ROLL,
	ROL,
	RORB,
	RORW,
	RORL,
	ROR,
	RDMSR,
	RDPMC,
	RDTSC,
	RSM,
	REP,
	REPE,
	REPZ,
	REPNE,
	REPNZ,
	RET,
	LRET,
	SAHF,
	SALB,
	SALW,
	SALL,
	SAL,
	SARB,
	SARW,
	SARL,
	SAR,
	SHLB,
	SHLW,
	SHLL,
	SHL,
	SHRB,
	SHRW,
	SHRL,
	SHR,
	SBBB,
	SBBW,
	SBBL,
	SBB,
	SCASB,
	REPE_SCASB,
	REPNE_SCASB,
	SCASW,
	REPE_SCASW,
	REPNE_SCASW,
	SCASL,
	REPE_SCASL,
	REPNE_SCASL,
	SCAS,
	SALC,
	SETA,
	SETAE,
	SETB,
	SETBE,
	SETC,
	SETE,
	SETG,
	SETGE,
	SETL,
	SETLE,
	SETNA,
	SETNAE,
	SETNB,
	SETNBE,
	SETNC,
	SETNE,
	SETNG,
	SETNGE,
	SETNL,
	SETNLE,
	SETNO,
	SETNP,
	SETNS,
	SETNZ,
	SETO,
	SETP,
	SETPE,
	SETPO,
	SETS,
	SETZ,
	SGDT,
	SIDT,
	SHLDW,
	SHLDL,
	SHLD,
	SHRDW,
	SHRDL,
	SHRD,
	SLDTW,
	SLDTL,
	SLDT,
	SMSWW,
	SMSWL,
	SMSW,
	STC,
	STD,
	STI,
	STOSB,
	REP_STOSB,
	STOSW,
	REP_STOSW,
	STOSL,
	REP_STOSL,
	STOS,
	STRW,
	STRL,
	STR,
	SUBB,
	SUBW,
	SUBL,
	SUB,
	TESTB,
	TESTW,
	TESTL,
	TEST,
	VERR,
	VERW,
	WAIT,
	WBINVD,
	WRMSR,
	XADDB,
	XADDW,
	XADDL,
	XADD,
	XCHGW,
	XCHGL,
	XCHG,
	NOP,
	XCHGB,
	XLAT,
	XORB,
	XORW,
	XORL,
	XOR,
	F2XM1,
	FABS,
	FADDS,
	FADDL,
	FADD,
	FADDP,
	FIADDL,
	FIADD,
	FBLD,
	FBSTP,
	FCHS,
	FCLEX,
	FNCLEX,
	FCOMS,
	FCOML,
	FCOM,
	FCOMPS,
	FCOMPL,
	FCOMP,
	FCOMPP,
	FCOMI,
	FCOMIP,
	FCOS,
	FDECSTP,
	FCMOVB,
	FCMOVE,
	FCMOVBE,
	FCMOVU,
	FCMOVNB,
	FCMOVNE,
	FCMOVNBE,
	FCMOVNU,
	FDIVS,
	FDIVL,
	FDIV,
	FDIVP,
	FIDIV,
	FIDIVL,
	FDISI,
	FENI,
	FDIVRS,
	FDIVRL,
	FDIVR,
	FDIVRP,
	FIDIVR,
	FIDIVRL,
	FFREE,
	FFREEP,
	FICOM,
	FICOML,
	FICOMP,
	FICOMPL,
	FILD,
	FILDL,
	FILDLL,
	FINCSTP,
	FINIT,
	FNINIT,
	FIST,
	FISTL,
	FISTP,
	FISTPL,
	FISTPLL,
	FLDS,
	FLDL,
	FLDT,
	FLD,
	FLD1,
	FLDL2T,
	FLDL2E,
	FLDPI,
	FLDLG2,
	FLDLN2,
	FLDZ,
	FLDCW,
	FLDENV,
	FMULS,
	FMULL,
	FMUL,
	FMULP,
	FIMULL,
	FIMUL,
	FNOP,
	FPATAN,
	FPREM,
	FPREM1,
	FPTAN,
	FRNDINT,
	FRSTOR,
	FSAVE,
	FNSAVE,
	FSETPM,
	FSCALE,
	FSIN,
	FSINCOS,
	FSQRT,
	FSTS,
	FSTL,
	FST,
	FSTPS,
	FSTPL,
	FSTPT,
	FSTP,
	FSTPNCE,
	FSTCW,
	FNSTCW,
	FSTENV,
	FNSTENV,
	FSTSW,
	FNSTSW,
	FSUBS,
	FSUBL,
	FSUB,
	FSUBP,
	FISUBL,
	FISUB,
	FSUBRS,
	FSUBRL,
	FSUBR,
	FSUBRP,
	FISUBRL,
	FISUBR,
	FTST,
	FUCOM,
	FUCOMP,
	FUCOMPP,
	FUCOMI,
	FUCOMIP,
	FWAIT,
	FXAM,
	FXCH,
	FXTRACT,
	FYL2X,
	FYL2XP1,
	ZALLOC,
	EMMS,
	MOVD,
	MOVQ,
	PACKSSWB,
	PACKSSDW,
	PACKUSWB,
	PADDB,
	PADDW,
	PADDD,
	PADDSB,
	PADDSW,
	PADDUSB,
	PADDUSW,
	PAND,
	PANDN,
	PCMPEQB,
	PCMPEQW,
	PCMPEQD,
	PCMPGTB,
	PCMPGTW,
	PCMPGTD,
	PMADDWD,
	PMULHW,
	PMULLW,
	POR,
	PSLLW,
	PSLLD,
	PSLLQ,
	PSRAW,
	PSRAD,
	PSRLW,
	PSRLD,
	PSRLQ,
	PSUBB,
	PSUBW,
	PSUBD,
	PSUBSB,
	PSUBSW,
	PSUBUSB,
	PSUBUSW,
	PUNPCKLBW,
	PUNPCKLWD,
	PUNPCKLDQ,
	PUNPCKHBW,
	PUNPCKHWD,
	PUNPCKHDQ,
	PXOR,
} Encoder_Mnem;


/**** Hardcoded common include ****/

typedef unsigned int Enc_Reg;

typedef enum  _Encoder_rep_type
{
    ENCODER_REP_TYPE_NONE = 0,
    ENCODER_REP_TYPE_REPE,
    ENCODER_REP_TYPE_REPNE
}Encoder_Rep_Type;
    
typedef struct _Enncoder_prefix_info
{
    unsigned char          n_prefixes;
    Encoder_Rep_Type       repeat_type;
    unsigned char          lock_prefix; /* 0 or 1 */
    unsigned char          operand_size_prefix; /* 0 or 1 */
    unsigned char          address_size_prefix; /* 0 or 1 */
    Enc_Reg                segment_register;
}Encoder_Prefix_Info;
    
/*** Input structure ***/
    
typedef struct _Encoder_op
{
    Encoder_Prefix_Info prefix_info;
    Encoder_Mnem        mnemonic;
    Enc_Reg             ops[3];
    Enc_Reg             base;
    Enc_Reg             index;
    signed int          ofs;
    signed int          imm_value;
} Encoder_Op;

/* Encoder function prototype */

int encode(char* codeptr, Encoder_Op *opinfo );

#endif /* __ENCODER_H__ */




