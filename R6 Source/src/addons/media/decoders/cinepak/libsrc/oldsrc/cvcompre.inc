; ex:set sw=2 ts=8 wm=0:
; $Header: u:/rcs/cv/rcs/cvcompre.inc 2.22 1995/04/29 12:31:42 bog Exp $

; (C) Copyright 1992-1993 SuperMac Technology, Inc.
; All rights reserved

; This source code and any compilation or derivative thereof is the sole
; property of SuperMac Technology, Inc. and is provided pursuant to a
; Software License Agreement.  This code is the proprietary information
; of SuperMac Technology and is confidential in nature.  Its use and
; dissemination by any party other than SuperMac Technology is strictly
; limited by the confidential information provisions of the Agreement
; referenced above.

; $Log: cvcompre.inc $
; Revision 2.22  1995/04/29 12:31:42  bog
; Explicitly name the CodeBook types.
; Revision 2.21  1995/03/14  08:24:08  bog
; 1.  No one was looking at the remembered previous frame's smooth
;     vectors, so there is no point in remembering them.
; 2.  We update the previous frame's remembered detail vectors to be as
;     refined (quantized) rather than as incoming, improving the decision
;     about what to update in the next frame.
; 
; Revision 2.20  1994/12/14  10:50:03  bog
; Make the frame size computations all long.
; 
; Revision 2.19  1994/11/08  11:26:00  bog
; Structure jmp_buf changed in MSVC++2.0.
; 
; Revision 2.18  1994/11/08  10:39:13  bog
; MIPS requires 8 byte alignment on jmp_buf.
; 
; Revision 2.17  1994/10/23  17:22:31  bog
; Try to allow big frames.
; 
; Revision 2.16  1994/05/26  11:15:37  timr
; DWORD align EXTCODE.nMatches.
; 
; Revision 2.15  1994/05/12  18:19:03  unknown
; Jmpbuf is 8 dwords for NT x86.
; 
; Revision 2.14  1994/05/11  10:40:57  unknown
; Dword alignment in struct.
; 
; Revision 2.13  1994/05/09  17:26:05  bog
; Black & White compression works.
; 
; Revision 2.12  1994/05/06  13:41:12  bog
; Play back black and white movies.
; 
; Revision 2.11  1994/05/01  23:39:09  unknown
; Move nCodes based max neighbors calculation down to MatchAndRefine().
; 
; Revision 2.10  1994/05/01  16:07:09  unknown
; Build the Neighbors list only in the first two rounds in ConvergeCodeBook.
; In subsequent rounds, just reuse the last one built.
; 
; Revision 2.9  1994/04/06  16:34:23  bog
; Add NeighborsRange to SYSTEM.INI stuff.  Maybe only experimental.
; 
; Revision 2.8  1993/10/21  14:07:31  geoffs
; Updated LOGREQUESTED stuff to include more data
; 
; Revision 2.7  1993/10/21  09:50:08  geoffs
; Added CD-ROM padding for compressions
; 
; Revision 2.6  1993/10/05  13:15:44  geoffs
; Additional changes to handle keyrates of 0 for frame size generation
; 
; Revision 2.5  1993/10/03  09:11:55  geoffs
; Slightly more correct,optimal frame size generation
; 
; Revision 2.4  1993/10/01  12:39:07  geoffs
; Now processing ICM_COMPRESSFRAMESINFO w/internal frame size generation
; 
; Revision 2.3  1993/09/24  14:08:02  geoffs
; Have an approximation of progress for compression in call to Status callback
; 
; Revision 2.2  1993/09/13  13:37:55  timr
; Switch back to ML-type structures for NT.
; 
; Revision 2.1  1993/09/02  16:32:50  timr
; Syntax error - how'd that get there?
; 
; Revision 2.0  1993/08/04  19:05:58  timr
; Initial revision; derived from cvcompre.h.
; 

; This file was generated by running h2inc on cvcompre.h, then hand-tuning
; it to assemble under both ML 6.1 and MASM386 5.NT.

; Begin of file cvcompre.h
; Begin of file cv.h
; Begin of file w16_32.h

_far		equ		<>
_huge		equ		<>
huge		equ		<>
HUGE		equ		<>
W16_32_DEFINED		equ		<>
; End of file w16_32.h

MAX_FRAME_HISTORY	equ		100

kMaxTileCount		equ		3
kFrameType		equ		000000000h
kKeyFrameType		equ		000000000h
kInterFrameType		equ		000000001h
kEmptyFrameType		equ		000000002h
kTileType		equ		000000010h
kKeyTileType		equ		000000010h
kInterTileType		equ		000000011h
kCodeBookType		equ	020h
kPartialBookBit		equ	001h
kSmoothBookBit		equ	002h
kGreyBookBit		equ	004h
kFullDBookType		equ	\
  kCodeBookType
kPartialDBookType	equ	\
  kCodeBookType + kPartialBookBit
kFullSBookType		equ	\
  kCodeBookType + kSmoothBookBit
kPartialSBookType	equ	\
  kCodeBookType + kPartialBookBit + kSmoothBookBit
kFullDGreyBookType	equ	\
  kCodeBookType + kGreyBookBit
kPartialDGreyBookType	equ	\
  kCodeBookType + kPartialBookBit + kGreyBookBit
kFullSGreyBookType	equ	\
  kCodeBookType + kSmoothBookBit + kGreyBookBit
kPartialSGreyBookType	equ	\
  kCodeBookType + kPartialBookBit + kSmoothBookBit + kGreyBookBit
kCodesType		equ		000000030h
kIntraCodesType		equ		000000030h
kInterCodesType		equ		000000031h
kAllSmoothCodesType	equ		000000032h
kLogRequestedType	equ		0000000fdh


SIZETYPE	struc		; st
stSwizSize	DD	?
SIZETYPE	ENDS

stsType		equ	<DB PTR [stSwizSize]>


SWIZRECT	struc		; sr
srSwizTop	DW	?
srSwizLeft	DW	?
srSwizBottom	DW	?
srSwizRight	DW	?
SWIZRECT	ENDS



INDICES		struc		; in
inSizeType	DB	size SIZETYPE DUP (?) ;	<>
inIndex		DB	?
INDICES		ENDS


COODE		struc		; cd
cdY		DB	4 DUP (?)
cdU		DB	?
cdV		DB	?
COODE		ENDS


CODEBOOK	struc		; cb
cbSizeType	DB	size SIZETYPE DUP (?)	;	<>
cbCode		DB	size COODE DUP (?)	;		<>
CODEBOOK	ENDS


TILE		struc 			; tl
tlSizeType	DB	size SIZETYPE DUP (?)	;		<>
tlSwizRect	DB	size SWIZRECT DUP (?)	;		<>
tlBook		DB	size CODEBOOK DUP (?)	;		<>
TILE		ENDS


LOGREQUESTEDTILE	struc	; lrt
lrtSizeType		DB	size SIZETYPE DUP (?)	;	<>
lrtSwizHintedSize	DD	?
lrtSwizSQuality		DW	?
lrtSwizTQuality		DW	?
LOGREQUESTEDTILE	ENDS


FRAME		struc		; fr
frSizeType	DB	size SIZETYPE DUP (?)	;	<>
frSwizWidth	DW	?
frSwizHeight	DW	?
frSwizNumTiles	DW	?
frTile		DB	size TILE DUP (?)	;	<>
FRAME		ENDS


; End of file cv.h
; Begin of file w16_32.h
; End of file w16_32.h
YYYYUV		struc		; yuv
yuvy		DB	4 DUP (?)
yuvu		DB	?
yuvv		DB	?
YYYYUV		ENDS


LYYYYUV		struc		; lyuv
lyuvy		DD	4 DUP (?)
lyuvu		DD	?
lyuvv		DD	?
LYYYYUV		ENDS


VECTOR		struc 		; v
vyuv		YYYYUV		<>
vCode		DB	?
vClass		DB	?
VECTOR		ENDS


NEIGHBORS	EQU		52

NEIGHBOR	struc		; ne
neHowFar	DW	?
ifndef	WIN32
nepWho		DW 	?
else
nepadToDDBdry	DW	?
nepWho		DD	?	; PTR EXTCODE		?
endif
NEIGHBOR	ENDS


CCODE		struc		; ccd
ccdyuv		DB	size YYYYUV DUP (?)	;	<>
ccdAge		DW	?
CCODE		ENDS


CCODEBOOK	struc		; ccdb
ccbpCodes	DD	?	; FAR PTR CCODE	?
ccbnCodes	DW	?
ccbfiller	DW	?
CCODEBOOK	ENDS


fINVALID	EQU	1
fUNLOCKED	EQU	2
fUPDATED	EQU	4

PEXTCODE	TYPEDEF	PTR EXTCODE

EXTCODE		struc		; ec
ecyuv		YYYYUV 	<>
ecCode		DB	?
ecFlags		DB	?
ecpHole		PEXTCODE	?
ifndef	WIN32
		dw	?
endif
ecnMatches	DD	?
eclyuv		LYYYYUV	<>
ecError		DD	?
ecNeighbor	NEIGHBOR	NEIGHBORS DUP (<>)
EXTCODE		ENDS

	ifndef	NOBLACKWHITE

COMPRESSFLAGS		RECORD	@1@COMPRESSFLAGS:13,	\
  LogRequested@COMPRESSFLAGS:1,	\
  FractionInterCodeBook@COMPRESSFLAGS:1, \
  BlackAndWhite:1

	else

COMPRESSFLAGS		RECORD	@1@COMPRESSFLAGS:14,	\
  LogRequested@COMPRESSFLAGS:1,	\
  FractionInterCodeBook@COMPRESSFLAGS:1

	endif


VECTORBOOK	struc	; vb
vbpECodes	DD	?	; FAR PTR EXTCODE
vbpVectors	DD	?	; HUGE PTR VECTOR
vbnCodes	DW	?
vbnUpdateCodes	DW	?
vbnVectors	DD	?
vbConverged	DD	?
vbTotalError	DD	?	; error relative to input
VECTORBOOK	ENDS


Detail		EQU	0
Smooth		EQU	1

ifndef	WIN32
PTILECONTEXT	TYPEDEF	PTR TILECONTEXT
endif

TILECONTEXT	struc		; tc
ifndef	WIN32
tcpNextTile	PTILECONTEXT	?
else
tcpNextTile	DD	?	; PTR TILECONTEXT	?
endif
tcTileNum	DW	?
tcHeight	DW	?
tcDIBHeigh	DW	?
tctType		DB	?
ifdef	WIN32
tcfiller	DB	?
else
tcfiller	DB	3 dup (?)
endif
tcnPatches	DD	?
tcpDetail	DD	?	; FAR PTR VECTOR	?
tcPBook		DB	2 DUP (size CCODEBOOK DUP (?))	;	2 DUP (<>)
TILECONTEXT	ENDS

CCONTEXT		struc 		; cc

ifndef	WIN32
ccEnvAbort		dw	9 dup (?)	; VERY environment specific
			dw	?		; to keep dword alignment
else
ccEnvAbort		dd	16 dup (?)	; VERY environment specific
endif

ccDIBYStep		DD	?
ccDIBWidth		DW	?
ccDIBHeight		DW	?
ifdef	WIN32
ccDIBType		dd	?
			dw	?
else
ccDIBType		DW	?
endif
ccFrameWidth		DW	?
ccFrameHeight		DW	?
ccfType			DB	?
			DB	?
ccnPixels		DD	?
ccDifference		DD	?
ccLastDifference	DD	?
ccbRecompressingToKey	DD	?
ccFramesSinceKey	DW	?
ccNeighbors		DW	?
ccCurrNeighbors		dw	?
ccFlags			DB	size COMPRESSFLAGS DUP (?)

ccpDiffList		DD	?	; HUGE PTR WORD	?
ccpDetailList		DD	?	; HUGE PTR WORD	?
ccDiffCount		DD	?
ccDetailCount		DD	?
ccVBook			VECTORBOOK	2 DUP (<>)
ccNeighborsRange	dw	8 dup (?)
ccNeighborsMethod	dw	?
ccNeighborsRounds	dw	?
ccpDIBToYUVPrivate	DD	?	; FAR PTR 	?
ccpT			DD	3 DUP (?)	; PTR TILECONTEXT
ccnTiles		DW	?
			dw	?

ccfValidICCF		dw	?
ccFPU			dw	?
ccBPU			dd	?
ccPadSize		dd	?
ccOverheadPerFrame	dd	?
ccratioUpper		dw	?
ccratioLower		dw	?
ccFrameSizes		dd	(2 * MAX_FRAME_HISTORY) dup (?)
ccInterframesLeft	dw	?
ccnNew			dw	?
ccBytesInFirstCU	dd	?

ccLParam		dd	?
ccStatus		dd	?
ccMatchAndRefineCalls	dw	?
ccMaxMatchAndRefineCalls dw	?

CCONTEXT		ENDS
