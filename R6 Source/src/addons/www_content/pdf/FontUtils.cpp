#include "FontUtils.h"

#include <string.h>
#include <algorithm>
#include <functional>

#include "Object2.h"

void 
CodeToPSNameMap::init_name_in_encodings(const char *name, uint16 a, uint16 r, uint16 w, uint16 e, uint16 s, uint16 d)
{
	const char *atom = PDFObject::StaticAtom(name);
	if (a != 0)
		fNames[STD_ADOBE_ENCODING][a - 32] = atom;
	if (r != 0)
		fNames[MAC_ROMAN_ENCODING][r - 32] = atom;
	if (w != 0)
		fNames[WIN_ANSI_ENCODING][w - 32] = atom;
	if (e != 0)
		fNames[MAC_EXPERT_ENCODING][e - 32] = atom;
	if (s != 0)
		fNames[SYMBOL_ENCODING][s - 32] = atom;
	if (d != 0)
		fNames[ZAPF_DINGBATS_ENCODING][d - 32] = atom;
}

CodeToPSNameMap::~CodeToPSNameMap(){}

CodeToPSNameMap::CodeToPSNameMap()
{
	memset(fNames, 0, 6 * sizeof(encoding_info));

	init_name_in_encodings("A", 65, 65, 65, 0, 0, 0);
	init_name_in_encodings("AE", 225, 174, 198, 0, 0, 0);
	init_name_in_encodings("AEsmall", 0, 0, 0, 190, 0, 0);
	init_name_in_encodings("Aacute", 0, 231, 193, 0, 0, 0);
	init_name_in_encodings("Aacutesmall", 0, 0, 0, 135, 0, 0);
	init_name_in_encodings("Acircumflex", 0, 229, 194, 0, 0, 0);
	init_name_in_encodings("Acircumflexsmall", 0, 0, 0, 137, 0, 0);
	init_name_in_encodings("Acutesmall", 0, 0, 0, 0, 39, 0);
	init_name_in_encodings("Adieresis", 0, 128, 196, 0, 0, 0);
	init_name_in_encodings("Adieresissmall", 0, 0, 0, 138, 0, 0);
	init_name_in_encodings("Agrave", 0, 203, 192, 0, 0, 0);
	init_name_in_encodings("Agravesmall", 0, 0, 0, 136, 0, 0);
	init_name_in_encodings("Alpha", 0, 0, 0, 0, 65, 0);
	init_name_in_encodings("Aring", 0, 129, 197, 0, 0, 0);
	init_name_in_encodings("Asmall", 0, 0, 0, 97, 0, 0);
	init_name_in_encodings("Atilde", 0, 204, 195, 0, 0, 0);
	init_name_in_encodings("Atildesmall", 0, 0, 0, 139, 0, 0);
	init_name_in_encodings("B", 66, 66, 66, 0, 0, 0);
	init_name_in_encodings("Beta", 0, 0, 0, 0, 66, 0);
	init_name_in_encodings("Brevesmall", 0, 0, 0, 363, 0, 0);
	init_name_in_encodings("Bsmall", 0, 0, 0, 98, 0, 0);
	init_name_in_encodings("C", 67, 67, 67, 0, 0, 0);
	init_name_in_encodings("Caronsmall", 0, 0, 0, 174, 0, 0);
	init_name_in_encodings("Ccedilla", 0, 130, 199, 0, 0, 0);
	init_name_in_encodings("Ccedillasmall", 0, 0, 0, 141, 0, 0);
	init_name_in_encodings("Cedillasmall", 0, 0, 0, 201, 0, 0);
	init_name_in_encodings("Chi", 0, 0, 0, 0, 67, 0);
	init_name_in_encodings("Circumflexsmall", 0, 0, 0, 94, 0, 0);
	init_name_in_encodings("Csmall", 0, 0, 0, 99, 0, 0);
	init_name_in_encodings("D", 68, 68, 68, 0, 0, 0);
	init_name_in_encodings("Delta", 0, 0, 0, 0, 68, 0);
	init_name_in_encodings("Dieresissmall", 0, 0, 0, 172, 0, 0);
	init_name_in_encodings("Dotaccentsmall", 0, 0, 0, 250, 0, 0);
	init_name_in_encodings("Dsmall", 0, 0, 0, 100, 0, 0);
	init_name_in_encodings("E", 69, 69, 69, 0, 0, 0);
	init_name_in_encodings("Eacturesmall", 0, 0, 0, 142, 0, 0);
	init_name_in_encodings("Eacute", 0, 131, 201, 0, 0, 0);
	init_name_in_encodings("Ecircumflex", 0, 230, 202, 0, 0, 0);
	init_name_in_encodings("Ecircumflexsmall", 0, 0, 0, 144, 0, 0);
	init_name_in_encodings("Edieresis", 0, 232, 203, 0, 0, 0);
	init_name_in_encodings("Edieresissmall", 0, 0, 0, 145, 0, 0);
	init_name_in_encodings("Egrave", 0, 233, 200, 0, 0, 0);
	init_name_in_encodings("Egravesmall", 0, 0, 0, 143, 0, 0);
	init_name_in_encodings("Epsilon", 0, 0, 0, 0, 69, 0);
	init_name_in_encodings("Esmall", 0, 0, 0, 101, 0, 0);
	init_name_in_encodings("Eta", 0, 0, 0, 0, 72, 0);
	init_name_in_encodings("Eth", 0, 0, 208, 0, 0, 0);
	init_name_in_encodings("Ethsmall", 0, 0, 0, 68, 0, 0);
	init_name_in_encodings("Euro", 0, 0, 128, 0, 160, 0);
	init_name_in_encodings("F", 70, 70, 70, 0, 0, 0);
	init_name_in_encodings("Fsmall", 0, 0, 0, 102, 0, 0);
	init_name_in_encodings("G", 71, 71, 71, 0, 0, 0);
	init_name_in_encodings("Gamma", 0, 0, 0, 0, 71, 0);
	init_name_in_encodings("Gravesmall", 0, 0, 0, 96, 0, 0);
	init_name_in_encodings("Gsmall", 0, 0, 0, 103, 0, 0);
	init_name_in_encodings("H", 72, 72, 72, 0, 0, 0);
	init_name_in_encodings("Hsmall", 0, 0, 0, 104, 0, 0);
	init_name_in_encodings("Hungarumlautsmall", 0, 0, 0, 34, 0, 0);
	init_name_in_encodings("I", 73, 73, 73, 0, 0, 0);
	init_name_in_encodings("Iacute", 0, 234, 205, 0, 0, 0);
	init_name_in_encodings("Iacutesmall", 0, 0, 0, 146, 0, 0);
	init_name_in_encodings("Icircumflex", 0, 235, 206, 0, 0, 0);
	init_name_in_encodings("Icircumflexsmall", 0, 0, 0, 148, 0, 0);
	init_name_in_encodings("Idieresis", 0, 236, 207, 0, 0, 0);
	init_name_in_encodings("Idieresissmall", 0, 0, 0, 149, 0, 0);
	init_name_in_encodings("Ifraktur", 0, 0, 0, 0, 193, 0);
	init_name_in_encodings("Igrave", 0, 237, 204, 0, 0, 0);
	init_name_in_encodings("Igravesmall", 0, 0, 0, 147, 0, 0);
	init_name_in_encodings("Iota", 0, 0, 0, 0, 73, 0);
	init_name_in_encodings("Ismall", 0, 0, 0, 105, 0, 0);
	init_name_in_encodings("J", 74, 74, 74, 0, 0, 0);
	init_name_in_encodings("Jsmall", 0, 0, 0, 106, 0, 0);
	init_name_in_encodings("K", 75, 75, 75, 0, 0, 0);
	init_name_in_encodings("Kappa", 0, 0, 0, 0, 75, 0);
	init_name_in_encodings("Ksmall", 0, 0, 0, 107, 0, 0);
	init_name_in_encodings("L", 76, 76, 76, 0, 0, 0);
	init_name_in_encodings("Lambda", 0, 0, 0, 0, 76, 0);
	init_name_in_encodings("Lslash", 232, 0, 0, 0, 0, 0);
	init_name_in_encodings("Lslashsmall", 0, 0, 0, 194, 0, 0);
	init_name_in_encodings("Lsmall", 0, 0, 0, 108, 0, 0);
	init_name_in_encodings("M", 77, 77, 77, 0, 0, 0);
	init_name_in_encodings("Macronsmall", 0, 0, 0, 244, 0, 0);
	init_name_in_encodings("Msmall", 0, 0, 0, 109, 0, 0);
	init_name_in_encodings("Mu", 0, 0, 0, 0, 77, 0);
	init_name_in_encodings("N", 78, 78, 78, 0, 0, 0);
	init_name_in_encodings("Nsmall", 0, 0, 0, 110, 0, 0);
	init_name_in_encodings("Ntilde", 0, 132, 209, 0, 0, 0);
	init_name_in_encodings("Ntildesmall", 0, 0, 0, 150, 0, 0);
	init_name_in_encodings("Nu", 0, 0, 0, 0, 78, 0);
	init_name_in_encodings("O", 79, 79, 79, 0, 0, 0);
	init_name_in_encodings("OE", 234, 206, 140, 0, 0, 0);
	init_name_in_encodings("OEsmall", 0, 0, 0, 207, 0, 0);
	init_name_in_encodings("Oacute", 0, 238, 211, 0, 0, 0);
	init_name_in_encodings("Oacutesmall", 0, 0, 0, 151, 0, 0);
	init_name_in_encodings("Ocircumflex", 0, 239, 212, 0, 0, 0);
	init_name_in_encodings("Ocircumflexsmall", 0, 0, 0, 153, 0, 0);
	init_name_in_encodings("Odieresis", 0, 133, 214, 0, 0, 0);
	init_name_in_encodings("Odieresissmall", 0, 0, 0, 154, 0, 0);
	init_name_in_encodings("Ogoneksmall", 0, 0, 0, 242, 0, 0);
	init_name_in_encodings("Ograve", 0, 241, 210, 0, 0, 0);
	init_name_in_encodings("Ogravesmall", 0, 0, 0, 152, 0, 0);
	init_name_in_encodings("Omega", 0, 0, 0, 0, 87, 0);
	init_name_in_encodings("Omicron", 0, 0, 0, 0, 79, 0);
	init_name_in_encodings("Oslash", 233, 175, 216, 0, 0, 0);
	init_name_in_encodings("Oslashsmall", 0, 0, 0, 191, 0, 0);
	init_name_in_encodings("Osmall", 0, 0, 0, 111, 0, 0);
	init_name_in_encodings("Otilde", 0, 205, 213, 0, 0, 0);
	init_name_in_encodings("Otildesmall", 0, 0, 0, 155, 0, 0);
	init_name_in_encodings("P", 80, 80, 80, 0, 0, 0);
	init_name_in_encodings("Phi", 0, 0, 0, 0, 70, 0);
	init_name_in_encodings("Pi", 0, 0, 0, 0, 80, 0);
	init_name_in_encodings("Psi", 0, 0, 0, 0, 89, 0);
	init_name_in_encodings("Psmall", 0, 0, 0, 112, 0, 0);
	init_name_in_encodings("Q", 81, 81, 81, 0, 0, 0);
	init_name_in_encodings("Qsmall", 0, 0, 0, 113, 0, 0);
	init_name_in_encodings("R", 82, 82, 82, 0, 0, 0);
	init_name_in_encodings("Rfraktur", 0, 0, 0, 0, 194, 0);
	init_name_in_encodings("Rho", 0, 0, 0, 0, 82, 0);
	init_name_in_encodings("Ringsmall", 0, 0, 0, 251, 0, 0);
	init_name_in_encodings("Rsmall", 0, 0, 0, 114, 0, 0);
	init_name_in_encodings("S", 83, 83, 83, 0, 0, 0);
	init_name_in_encodings("Scaron", 0, 0, 138, 0, 0, 0);
	init_name_in_encodings("Scaronsmall", 0, 0, 0, 167, 0, 0);
	init_name_in_encodings("Sigma", 0, 0, 0, 0, 83, 0);
	init_name_in_encodings("Ssmall", 0, 0, 0, 115, 0, 0);
	init_name_in_encodings("T", 84, 84, 84, 0, 0, 0);
	init_name_in_encodings("Tau", 0, 0, 0, 0, 84, 0);
	init_name_in_encodings("Theta", 0, 0, 0, 0, 81, 0);
	init_name_in_encodings("Thorn", 0, 0, 222, 0, 0, 0);
	init_name_in_encodings("Thornsmall", 0, 0, 0, 185, 0, 0);
	init_name_in_encodings("Tildesmall", 0, 0, 0, 126, 0, 0);
	init_name_in_encodings("Tsmall", 0, 0, 0, 116, 0, 0);
	init_name_in_encodings("U", 85, 85, 85, 0, 0, 0);
	init_name_in_encodings("Uacute", 0, 242, 218, 0, 0, 0);
	init_name_in_encodings("Uacutesmall", 0, 0, 156, 0, 0, 0);
	init_name_in_encodings("Ucircumflex", 0, 243, 219, 0, 0, 0);
	init_name_in_encodings("Ucircumflexsmall", 0, 0, 0, 158, 0, 0);
	init_name_in_encodings("Udieresis", 0, 134, 220, 0, 0, 0);
	init_name_in_encodings("Udieresissmall", 0, 0, 0, 159, 0, 0);
	init_name_in_encodings("Ugrave", 0, 244, 217, 0, 0, 0);
	init_name_in_encodings("Ugravesmall", 0, 0, 0, 157, 0, 0);
	init_name_in_encodings("Upsilon", 0, 0, 0, 0, 85, 0);
	init_name_in_encodings("Upsilon1", 0, 0, 0, 0, 161, 0);
	init_name_in_encodings("Usmall", 0, 0, 0, 117, 0, 0);
	init_name_in_encodings("V", 86, 86, 86, 0, 0, 0);
	init_name_in_encodings("Vsmall", 0, 0, 0, 118, 0, 0);
	init_name_in_encodings("W", 87, 87, 87, 0, 0, 0);
	init_name_in_encodings("Wsmall", 0, 0, 0, 119, 0, 0);
	init_name_in_encodings("X", 88, 88, 88, 0, 0, 0);
	init_name_in_encodings("Xi", 0, 0, 0, 0, 88, 0);
	init_name_in_encodings("Xsmall", 0, 0, 0, 120, 0, 0);
	init_name_in_encodings("Y", 89, 89, 89, 0, 0, 0);
	init_name_in_encodings("Yacute", 0, 0, 221, 0, 0, 0);
	init_name_in_encodings("Yacutesmall", 0, 0, 180, 0, 0, 0);
	init_name_in_encodings("Ydieresis", 0, 217, 159, 0, 0, 0);
	init_name_in_encodings("Ydieresissmall", 0, 0, 0, 216, 0, 0);
	init_name_in_encodings("Ysmall", 0, 0, 0, 121, 0, 0);
	init_name_in_encodings("Z", 90, 90, 90, 0, 0, 0);
	init_name_in_encodings("Zcaron", 0, 0, 142, 0, 0, 0);
	init_name_in_encodings("Zcaronsmall", 0, 0, 0, 189, 0, 0);
	init_name_in_encodings("Zeta", 0, 0, 0, 0, 90, 0);
	init_name_in_encodings("Zsmall", 0, 0, 0, 122, 0, 0);
	init_name_in_encodings("a", 97, 97, 97, 0, 0, 0);
	init_name_in_encodings("a1", 0, 0, 0, 0, 0, 33);
	init_name_in_encodings("a10", 0, 0, 0, 0, 0, 65);
	init_name_in_encodings("a100", 0, 0, 0, 0, 0, 126);
	init_name_in_encodings("a101", 0, 0, 0, 0, 0, 161);
	init_name_in_encodings("a102", 0, 0, 0, 0, 0, 162);
	init_name_in_encodings("a103", 0, 0, 0, 0, 0, 163);
	init_name_in_encodings("a104", 0, 0, 0, 0, 0, 164);
	init_name_in_encodings("a105", 0, 0, 0, 0, 0, 48);
	init_name_in_encodings("a106", 0, 0, 0, 0, 0, 165);
	init_name_in_encodings("a107", 0, 0, 0, 0, 0, 166);
	init_name_in_encodings("a108", 0, 0, 0, 0, 0, 167);
	init_name_in_encodings("a109", 0, 0, 0, 0, 0, 171);
	init_name_in_encodings("a11", 0, 0, 0, 0, 0, 42);
	init_name_in_encodings("a110", 0, 0, 0, 0, 0, 170);
	init_name_in_encodings("a111", 0, 0, 0, 0, 0, 169);
	init_name_in_encodings("a112", 0, 0, 0, 0, 0, 168);
	init_name_in_encodings("a117", 0, 0, 0, 0, 0, 41);
	init_name_in_encodings("a118", 0, 0, 0, 0, 0, 40);
	init_name_in_encodings("a119", 0, 0, 0, 0, 0, 39);
	init_name_in_encodings("a12", 0, 0, 0, 0, 0, 43);
	init_name_in_encodings("a120", 0, 0, 0, 0, 0, 172);
	init_name_in_encodings("a121", 0, 0, 0, 0, 0, 173);
	init_name_in_encodings("a122", 0, 0, 0, 0, 0, 174);
	init_name_in_encodings("a123", 0, 0, 0, 0, 0, 175);
	init_name_in_encodings("a124", 0, 0, 0, 0, 0, 176);
	init_name_in_encodings("a125", 0, 0, 0, 0, 0, 177);
	init_name_in_encodings("a126", 0, 0, 0, 0, 0, 178);
	init_name_in_encodings("a127", 0, 0, 0, 0, 0, 179);
	init_name_in_encodings("a128", 0, 0, 0, 0, 0, 180);
	init_name_in_encodings("a129", 0, 0, 0, 0, 0, 181);
	init_name_in_encodings("a13", 0, 0, 0, 0, 0, 44);
	init_name_in_encodings("a130", 0, 0, 0, 0, 0, 182);
	init_name_in_encodings("a131", 0, 0, 0, 0, 0, 183);
	init_name_in_encodings("a132", 0, 0, 0, 0, 0, 184);
	init_name_in_encodings("a133", 0, 0, 0, 0, 0, 185);
	init_name_in_encodings("a134", 0, 0, 0, 0, 0, 186);
	init_name_in_encodings("a135", 0, 0, 0, 0, 0, 187);
	init_name_in_encodings("a136", 0, 0, 0, 0, 0, 188);
	init_name_in_encodings("a137", 0, 0, 0, 0, 0, 189);
	init_name_in_encodings("a138", 0, 0, 0, 0, 0, 190);
	init_name_in_encodings("a139", 0, 0, 0, 0, 0, 191);
	init_name_in_encodings("a14", 0, 0, 0, 0, 0, 45);
	init_name_in_encodings("a140", 0, 0, 0, 0, 0, 192);
	init_name_in_encodings("a141", 0, 0, 0, 0, 0, 193);
	init_name_in_encodings("a142", 0, 0, 0, 0, 0, 194);
	init_name_in_encodings("a143", 0, 0, 0, 0, 0, 195);
	init_name_in_encodings("a144", 0, 0, 0, 0, 0, 196);
	init_name_in_encodings("a145", 0, 0, 0, 0, 0, 197);
	init_name_in_encodings("a146", 0, 0, 0, 0, 0, 198);
	init_name_in_encodings("a147", 0, 0, 0, 0, 0, 199);
	init_name_in_encodings("a148", 0, 0, 0, 0, 0, 200);
	init_name_in_encodings("a149", 0, 0, 0, 0, 0, 201);
	init_name_in_encodings("a15", 0, 0, 0, 0, 0, 46);
	init_name_in_encodings("a150", 0, 0, 0, 0, 0, 202);
	init_name_in_encodings("a151", 0, 0, 0, 0, 0, 203);
	init_name_in_encodings("a152", 0, 0, 0, 0, 0, 204);
	init_name_in_encodings("a153", 0, 0, 0, 0, 0, 205);
	init_name_in_encodings("a154", 0, 0, 0, 0, 0, 206);
	init_name_in_encodings("a155", 0, 0, 0, 0, 0, 207);
	init_name_in_encodings("a156", 0, 0, 0, 0, 0, 208);
	init_name_in_encodings("a157", 0, 0, 0, 0, 0, 209);
	init_name_in_encodings("a158", 0, 0, 0, 0, 0, 210);
	init_name_in_encodings("a159", 0, 0, 0, 0, 0, 211);
	init_name_in_encodings("a16", 0, 0, 0, 0, 0, 47);
	init_name_in_encodings("a160", 0, 0, 0, 0, 0, 212);
	init_name_in_encodings("a161", 0, 0, 0, 0, 0, 213);
	init_name_in_encodings("a162", 0, 0, 0, 0, 0, 227);
	init_name_in_encodings("a163", 0, 0, 0, 0, 0, 214);
	init_name_in_encodings("a164", 0, 0, 0, 0, 0, 215);
	init_name_in_encodings("a165", 0, 0, 0, 0, 0, 217);
	init_name_in_encodings("a166", 0, 0, 0, 0, 0, 219);
	init_name_in_encodings("a167", 0, 0, 0, 0, 0, 220);
	init_name_in_encodings("a168", 0, 0, 0, 0, 0, 221);
	init_name_in_encodings("a169", 0, 0, 0, 0, 0, 222);
	init_name_in_encodings("a17", 0, 0, 0, 0, 0, 49);
	init_name_in_encodings("a170", 0, 0, 0, 0, 0, 223);
	init_name_in_encodings("a171", 0, 0, 0, 0, 0, 224);
	init_name_in_encodings("a172", 0, 0, 0, 0, 0, 225);
	init_name_in_encodings("a173", 0, 0, 0, 0, 0, 226);
	init_name_in_encodings("a174", 0, 0, 0, 0, 0, 228);
	init_name_in_encodings("a175", 0, 0, 0, 0, 0, 229);
	init_name_in_encodings("a176", 0, 0, 0, 0, 0, 230);
	init_name_in_encodings("a177", 0, 0, 0, 0, 0, 231);
	init_name_in_encodings("a178", 0, 0, 0, 0, 0, 232);
	init_name_in_encodings("a179", 0, 0, 0, 0, 0, 233);
	init_name_in_encodings("a18", 0, 0, 0, 0, 0, 50);
	init_name_in_encodings("a180", 0, 0, 0, 0, 0, 235);
	init_name_in_encodings("a181", 0, 0, 0, 0, 0, 237);
	init_name_in_encodings("a182", 0, 0, 0, 0, 0, 239);
	init_name_in_encodings("a183", 0, 0, 0, 0, 0, 242);
	init_name_in_encodings("a184", 0, 0, 0, 0, 0, 243);
	init_name_in_encodings("a185", 0, 0, 0, 0, 0, 245);
	init_name_in_encodings("a186", 0, 0, 0, 0, 0, 248);
	init_name_in_encodings("a187", 0, 0, 0, 0, 0, 250);
	init_name_in_encodings("a188", 0, 0, 0, 0, 0, 251);
	init_name_in_encodings("a189", 0, 0, 0, 0, 0, 252);
	init_name_in_encodings("a19", 0, 0, 0, 0, 0, 51);
	init_name_in_encodings("a190", 0, 0, 0, 0, 0, 253);
	init_name_in_encodings("a191", 0, 0, 0, 0, 0, 254);
	init_name_in_encodings("a192", 0, 0, 0, 0, 0, 218);
	init_name_in_encodings("a193", 0, 0, 0, 0, 0, 234);
	init_name_in_encodings("a194", 0, 0, 0, 0, 0, 246);
	init_name_in_encodings("a195", 0, 0, 0, 0, 0, 249);
	init_name_in_encodings("a196", 0, 0, 0, 0, 0, 216);
	init_name_in_encodings("a197", 0, 0, 0, 0, 0, 244);
	init_name_in_encodings("a198", 0, 0, 0, 0, 0, 247);
	init_name_in_encodings("a199", 0, 0, 0, 0, 0, 236);
	init_name_in_encodings("a2", 0, 0, 0, 0, 0, 34);
	init_name_in_encodings("a20", 0, 0, 0, 0, 0, 52);
	init_name_in_encodings("a200", 0, 0, 0, 0, 0, 238);
	init_name_in_encodings("a201", 0, 0, 0, 0, 0, 241);
	init_name_in_encodings("a202", 0, 0, 0, 0, 0, 35);
	init_name_in_encodings("a203", 0, 0, 0, 0, 0, 112);
	init_name_in_encodings("a204", 0, 0, 0, 0, 0, 114);
	init_name_in_encodings("a205", 0, 0, 0, 0, 0, 134);
	init_name_in_encodings("a206", 0, 0, 0, 0, 0, 136);
	init_name_in_encodings("a21", 0, 0, 0, 0, 0, 53);
	init_name_in_encodings("a22", 0, 0, 0, 0, 0, 54);
	init_name_in_encodings("a23", 0, 0, 0, 0, 0, 55);
	init_name_in_encodings("a24", 0, 0, 0, 0, 0, 56);
	init_name_in_encodings("a25", 0, 0, 0, 0, 0, 57);
	init_name_in_encodings("a26", 0, 0, 0, 0, 0, 58);
	init_name_in_encodings("a27", 0, 0, 0, 0, 0, 59);
	init_name_in_encodings("a28", 0, 0, 0, 0, 0, 60);
	init_name_in_encodings("a29", 0, 0, 0, 0, 0, 66);
	init_name_in_encodings("a3", 0, 0, 0, 0, 0, 36);
	init_name_in_encodings("a30", 0, 0, 0, 0, 0, 67);
	init_name_in_encodings("a31", 0, 0, 0, 0, 0, 68);
	init_name_in_encodings("a32", 0, 0, 0, 0, 0, 69);
	init_name_in_encodings("a33", 0, 0, 0, 0, 0, 70);
	init_name_in_encodings("a34", 0, 0, 0, 0, 0, 71);
	init_name_in_encodings("a35", 0, 0, 0, 0, 0, 72);
	init_name_in_encodings("a36", 0, 0, 0, 0, 0, 73);
	init_name_in_encodings("a37", 0, 0, 0, 0, 0, 74);
	init_name_in_encodings("a38", 0, 0, 0, 0, 0, 75);
	init_name_in_encodings("a39", 0, 0, 0, 0, 0, 76);
	init_name_in_encodings("a4", 0, 0, 0, 0, 0, 37);
	init_name_in_encodings("a40", 0, 0, 0, 0, 0, 77);
	init_name_in_encodings("a41", 0, 0, 0, 0, 0, 78);
	init_name_in_encodings("a42", 0, 0, 0, 0, 0, 79);
	init_name_in_encodings("a43", 0, 0, 0, 0, 0, 80);
	init_name_in_encodings("a44", 0, 0, 0, 0, 0, 81);
	init_name_in_encodings("a45", 0, 0, 0, 0, 0, 82);
	init_name_in_encodings("a46", 0, 0, 0, 0, 0, 83);
	init_name_in_encodings("a47", 0, 0, 0, 0, 0, 84);
	init_name_in_encodings("a48", 0, 0, 0, 0, 0, 85);
	init_name_in_encodings("a49", 0, 0, 0, 0, 0, 86);
	init_name_in_encodings("a5", 0, 0, 0, 0, 0, 38);
	init_name_in_encodings("a50", 0, 0, 0, 0, 0, 87);
	init_name_in_encodings("a51", 0, 0, 0, 0, 0, 88);
	init_name_in_encodings("a52", 0, 0, 0, 0, 0, 89);
	init_name_in_encodings("a53", 0, 0, 0, 0, 0, 90);
	init_name_in_encodings("a54", 0, 0, 0, 0, 0, 91);
	init_name_in_encodings("a55", 0, 0, 0, 0, 0, 92);
	init_name_in_encodings("a56", 0, 0, 0, 0, 0, 93);
	init_name_in_encodings("a57", 0, 0, 0, 0, 0, 94);
	init_name_in_encodings("a58", 0, 0, 0, 0, 0, 95);
	init_name_in_encodings("a59", 0, 0, 0, 0, 0, 96);
	init_name_in_encodings("a6", 0, 0, 0, 0, 0, 61);
	init_name_in_encodings("a60", 0, 0, 0, 0, 0, 97);
	init_name_in_encodings("a61", 0, 0, 0, 0, 0, 98);
	init_name_in_encodings("a62", 0, 0, 0, 0, 0, 99);
	init_name_in_encodings("a63", 0, 0, 0, 0, 0, 100);
	init_name_in_encodings("a64", 0, 0, 0, 0, 0, 101);
	init_name_in_encodings("a65", 0, 0, 0, 0, 0, 102);
	init_name_in_encodings("a66", 0, 0, 0, 0, 0, 103);
	init_name_in_encodings("a67", 0, 0, 0, 0, 0, 104);
	init_name_in_encodings("a68", 0, 0, 0, 0, 0, 105);
	init_name_in_encodings("a69", 0, 0, 0, 0, 0, 106);
	init_name_in_encodings("a7", 0, 0, 0, 0, 0, 62);
	init_name_in_encodings("a70", 0, 0, 0, 0, 0, 107);
	init_name_in_encodings("a71", 0, 0, 0, 0, 0, 108);
	init_name_in_encodings("a72", 0, 0, 0, 0, 0, 109);
	init_name_in_encodings("a73", 0, 0, 0, 0, 0, 110);
	init_name_in_encodings("a74", 0, 0, 0, 0, 0, 111);
	init_name_in_encodings("a75", 0, 0, 0, 0, 0, 113);
	init_name_in_encodings("a76", 0, 0, 0, 0, 0, 115);
	init_name_in_encodings("a77", 0, 0, 0, 0, 0, 116);
	init_name_in_encodings("a78", 0, 0, 0, 0, 0, 117);
	init_name_in_encodings("a79", 0, 0, 0, 0, 0, 118);
	init_name_in_encodings("a8", 0, 0, 0, 0, 0, 63);
	init_name_in_encodings("a81", 0, 0, 0, 0, 0, 119);
	init_name_in_encodings("a82", 0, 0, 0, 0, 0, 120);
	init_name_in_encodings("a83", 0, 0, 0, 0, 0, 121);
	init_name_in_encodings("a84", 0, 0, 0, 0, 0, 122);
	init_name_in_encodings("a85", 0, 0, 0, 0, 0, 135);
	init_name_in_encodings("a86", 0, 0, 0, 0, 0, 137);
	init_name_in_encodings("a87", 0, 0, 0, 0, 0, 138);
	init_name_in_encodings("a88", 0, 0, 0, 0, 0, 139);
	init_name_in_encodings("a89", 0, 0, 0, 0, 0, 128);
	init_name_in_encodings("a9", 0, 0, 0, 0, 0, 64);
	init_name_in_encodings("a90", 0, 0, 0, 0, 0, 129);
	init_name_in_encodings("a91", 0, 0, 0, 0, 0, 132);
	init_name_in_encodings("a92", 0, 0, 0, 0, 0, 133);
	init_name_in_encodings("a93", 0, 0, 0, 0, 0, 130);
	init_name_in_encodings("a94", 0, 0, 0, 0, 0, 131);
	init_name_in_encodings("a95", 0, 0, 0, 0, 0, 140);
	init_name_in_encodings("a96", 0, 0, 0, 0, 0, 141);
	init_name_in_encodings("a97", 0, 0, 0, 0, 0, 123);
	init_name_in_encodings("a98", 0, 0, 0, 0, 0, 124);
	init_name_in_encodings("a99", 0, 0, 0, 0, 0, 125);
	init_name_in_encodings("aacute", 0, 135, 225, 0, 0, 0);
	init_name_in_encodings("acircumflex", 0, 137, 226, 0, 0, 0);
	init_name_in_encodings("acute", 194, 171, 180, 0, 0, 0);
	init_name_in_encodings("adieresis", 0, 138, 228, 0, 0, 0);
	init_name_in_encodings("ae", 241, 190, 230, 0, 0, 0);
	init_name_in_encodings("agrave", 0, 136, 224, 0, 0, 0);
	init_name_in_encodings("aleph", 0, 0, 0, 0, 192, 0);
	init_name_in_encodings("alpha", 0, 0, 0, 0, 97, 0);
	init_name_in_encodings("ampersand", 38, 38, 38, 0, 38, 0);
	init_name_in_encodings("ampersandsmall", 0, 0, 0, 38, 0, 0);
	init_name_in_encodings("angle", 0, 0, 0, 0, 208, 0);
	init_name_in_encodings("angleleft", 0, 0, 0, 0, 225, 0);
	init_name_in_encodings("angleright", 0, 0, 0, 0, 241, 0);
	init_name_in_encodings("approxequal", 0, 0, 0, 0, 187, 0);
	init_name_in_encodings("aring", 0, 140, 229, 0, 0, 0);
	init_name_in_encodings("arrowboth", 0, 0, 0, 0, 171, 0);
	init_name_in_encodings("arrowdblboth", 0, 0, 0, 0, 219, 0);
	init_name_in_encodings("arrowdbldown", 0, 0, 0, 0, 223, 0);
	init_name_in_encodings("arrowdblleft", 0, 0, 0, 0, 220, 0);
	init_name_in_encodings("arrowdblright", 0, 0, 0, 0, 222, 0);
	init_name_in_encodings("arrowdblup", 0, 0, 0, 0, 221, 0);
	init_name_in_encodings("arrowdown", 0, 0, 0, 0, 175, 0);
	init_name_in_encodings("arrowhorizex", 0, 0, 0, 0, 190, 0);
	init_name_in_encodings("arrowleft", 0, 0, 0, 0, 172, 0);
	init_name_in_encodings("arrowright", 0, 0, 0, 0, 174, 0);
	init_name_in_encodings("arrowup", 0, 0, 0, 0, 173, 0);
	init_name_in_encodings("arrowvertex", 0, 0, 0, 0, 189, 0);
	init_name_in_encodings("asciicircum", 94, 94, 94, 0, 0, 0);
	init_name_in_encodings("asciitilde", 126, 126, 126, 0, 0, 0);
	init_name_in_encodings("asterisk", 42, 42, 42, 0, 0, 0);
	init_name_in_encodings("asteriskmath", 0, 0, 0, 0, 42, 0);
	init_name_in_encodings("asuperior", 0, 0, 0, 129, 0, 0);
	init_name_in_encodings("at", 64, 64, 64, 0, 0, 0);
	init_name_in_encodings("atilde", 0, 139, 227, 0, 0, 0);
	init_name_in_encodings("b", 98, 98, 98, 0, 0, 0);
	init_name_in_encodings("backslash", 92, 92, 92, 0, 0, 0);
	init_name_in_encodings("bar", 124, 124, 124, 0, 124, 0);
	init_name_in_encodings("beta", 0, 0, 0, 0, 98, 0);
	init_name_in_encodings("braceex", 0, 0, 0, 0, 239, 0);
	init_name_in_encodings("braceleft", 123, 123, 123, 0, 123, 0);
	init_name_in_encodings("braceleftbt", 0, 0, 0, 0, 238, 0);
	init_name_in_encodings("braceleftmid", 0, 0, 0, 0, 237, 0);
	init_name_in_encodings("bracelefttp", 0, 0, 0, 0, 236, 0);
	init_name_in_encodings("braceright", 125, 125, 125, 0, 125, 0);
	init_name_in_encodings("bracerightbt", 0, 0, 0, 0, 254, 0);
	init_name_in_encodings("bracerightmid", 0, 0, 0, 0, 253, 0);
	init_name_in_encodings("bracerighttp", 0, 0, 0, 0, 252, 0);
	init_name_in_encodings("bracketleft", 91, 91, 91, 0, 91, 0);
	init_name_in_encodings("bracketleftbt", 0, 0, 0, 0, 235, 0);
	init_name_in_encodings("bracketleftex", 0, 0, 0, 0, 234, 0);
	init_name_in_encodings("bracketlefttp", 0, 0, 0, 0, 233, 0);
	init_name_in_encodings("bracketright", 93, 93, 93, 0, 93, 0);
	init_name_in_encodings("bracketrightbt", 0, 0, 0, 0, 251, 0);
	init_name_in_encodings("bracketrightex", 0, 0, 0, 0, 250, 0);
	init_name_in_encodings("bracketrighttp", 0, 0, 0, 0, 249, 0);
	init_name_in_encodings("breve", 198, 249, 0, 0, 0, 0);
	init_name_in_encodings("brokenbar", 0, 0, 166, 0, 0, 0);
	init_name_in_encodings("bsuperior", 0, 0, 0, 245, 0, 0);
	init_name_in_encodings("bullet", 183, 165, 149, 0, 183, 0);
	init_name_in_encodings("c", 99, 99, 99, 0, 0, 0);
	init_name_in_encodings("caron", 207, 255, 0, 0, 0, 0);
	init_name_in_encodings("carriagereturn", 0, 0, 0, 0, 191, 0);
	init_name_in_encodings("ccedilla", 0, 141, 231, 0, 0, 0);
	init_name_in_encodings("cedilla", 203, 252, 184, 0, 0, 0);
	init_name_in_encodings("cent", 162, 162, 162, 0, 0, 0);
	init_name_in_encodings("centinferior", 0, 0, 0, 169, 0, 0);
	init_name_in_encodings("centoldstyle", 0, 0, 0, 35, 0, 0);
	init_name_in_encodings("centsuperior", 0, 0, 0, 130, 0, 0);
	init_name_in_encodings("chi", 0, 0, 0, 0, 99, 0);
	init_name_in_encodings("circlemultiply", 0, 0, 0, 0, 196, 0);
	init_name_in_encodings("circleplus", 0, 0, 0, 0, 197, 0);
	init_name_in_encodings("circumflex", 195, 246, 136, 0, 0, 0);
	init_name_in_encodings("club", 0, 0, 0, 0, 167, 0);
	init_name_in_encodings("colon", 58, 58, 58, 58, 58, 0);
	init_name_in_encodings("colonmonetary", 0, 0, 0, 123, 0, 0);
	init_name_in_encodings("comma", 44, 44, 44, 44, 44, 0);
	init_name_in_encodings("commainferior", 0, 0, 0, 178, 0, 0);
	init_name_in_encodings("commasuperior", 0, 0, 0, 248, 0, 0);
	init_name_in_encodings("congruent", 0, 0, 0, 0, 64, 0);
	init_name_in_encodings("copyright", 0, 169, 169, 0, 0, 0);
	init_name_in_encodings("copyrightsans", 0, 0, 0, 0, 227, 0);
	init_name_in_encodings("copyrightserif", 0, 0, 0, 0, 211, 0);
	init_name_in_encodings("currency", 168, 219, 164, 0, 0, 0);
	init_name_in_encodings("d", 100, 100, 100, 0, 0, 0);
	init_name_in_encodings("dagger", 178, 160, 134, 0, 0, 0);
	init_name_in_encodings("daggerdbl", 179, 224, 135, 0, 0, 0);
	init_name_in_encodings("degree", 0, 161, 176, 0, 176, 0);
	init_name_in_encodings("delta", 0, 0, 0, 0, 100, 0);
	init_name_in_encodings("diamond", 0, 0, 0, 0, 168, 0);
	init_name_in_encodings("dieresis", 200, 172, 168, 0, 0, 0);
	init_name_in_encodings("divide", 0, 214, 247, 0, 184, 0);
	init_name_in_encodings("dollar", 36, 36, 36, 0, 0, 0);
	init_name_in_encodings("dollarinferior", 0, 0, 0, 182, 0, 0);
	init_name_in_encodings("dollaroldstyle", 0, 0, 0, 37, 0, 0);
	init_name_in_encodings("dollarsuperior", 0, 0, 0, 182, 0, 0);
	init_name_in_encodings("dotaccent", 199, 250, 0, 0, 0, 0);
	init_name_in_encodings("dotlessi", 245, 245, 0, 0, 0, 0);
	init_name_in_encodings("dotmath", 0, 0, 0, 0, 215, 0);
	init_name_in_encodings("dsuperior", 0, 0, 0, 235, 0, 0);
	init_name_in_encodings("e", 101, 101, 101, 0, 0, 0);
	init_name_in_encodings("eacute", 0, 142, 233, 0, 0, 0);
	init_name_in_encodings("ecircumflex", 0, 144, 234, 0, 0, 0);
	init_name_in_encodings("edieresis", 0, 145, 235, 0, 0, 0);
	init_name_in_encodings("egrave", 0, 143, 232, 0, 0, 0);
	init_name_in_encodings("eight", 56, 56, 56, 0, 56, 0);
	init_name_in_encodings("eightinferior", 0, 0, 0, 165, 0, 0);
	init_name_in_encodings("eightoldstyle", 0, 0, 0, 56, 0, 0);
	init_name_in_encodings("eightsuperior", 0, 0, 0, 161, 0, 0);
	init_name_in_encodings("element", 0, 0, 0, 0, 206, 0);
	init_name_in_encodings("ellipsis", 188, 201, 133, 0, 188, 0);
	init_name_in_encodings("emdash", 208, 209, 151, 0, 0, 0);
	init_name_in_encodings("emptyset", 0, 0, 0, 0, 198, 0);
	init_name_in_encodings("endash", 177, 208, 150, 0, 0, 0);
	init_name_in_encodings("epsilon", 0, 0, 0, 0, 101, 0);
	init_name_in_encodings("equal", 61, 61, 61, 0, 61, 0);
	init_name_in_encodings("equivalence", 0, 0, 0, 0, 186, 0);
	init_name_in_encodings("esuperior", 0, 0, 0, 228, 0, 0);
	init_name_in_encodings("eta", 0, 0, 0, 0, 104, 0);
	init_name_in_encodings("eth", 0, 0, 240, 0, 0, 0);
	init_name_in_encodings("exclam", 33, 33, 33, 0, 33, 0);
	init_name_in_encodings("exclamdown", 161, 193, 161, 0, 0, 0);
	init_name_in_encodings("exclamdownsmall", 0, 0, 0, 214, 0, 0);
	init_name_in_encodings("exclamsmall", 0, 0, 0, 33, 0, 0);
	init_name_in_encodings("existential", 0, 0, 0, 0, 36, 0);
	init_name_in_encodings("f", 102, 102, 102, 0, 0, 0);
	init_name_in_encodings("ff", 0, 0, 0, 86, 0, 0);
	init_name_in_encodings("ffi", 0, 0, 0, 89, 0, 0);
	init_name_in_encodings("ffl", 0, 0, 0, 90, 0, 0);
	init_name_in_encodings("fi", 174, 222, 0, 87, 0, 0);
	init_name_in_encodings("figuredash", 0, 0, 0, 208, 0, 0);
	init_name_in_encodings("five", 53, 53, 53, 0, 53, 0);
	init_name_in_encodings("fiveeighths", 0, 0, 0, 76, 0, 0);
	init_name_in_encodings("fiveinferior", 0, 0, 0, 176, 0, 0);
	init_name_in_encodings("fiveoldstyle", 0, 0, 0, 53, 0, 0);
	init_name_in_encodings("fiversuperior", 0, 0, 0, 222, 0, 0);
	init_name_in_encodings("fl", 175, 223, 0, 88, 0, 0);
	init_name_in_encodings("florin", 166, 196, 131, 166, 0, 0);
	init_name_in_encodings("four", 52, 52, 52, 0, 52, 0);
	init_name_in_encodings("fourinferior", 0, 0, 0, 162, 0, 0);
	init_name_in_encodings("fouroldstyle", 0, 0, 0, 52, 0, 0);
	init_name_in_encodings("foursuperior", 0, 0, 0, 221, 0, 0);
	init_name_in_encodings("fraction", 164, 218, 0, 47, 164, 0);
	init_name_in_encodings("g", 103, 103, 103, 0, 0, 0);
	init_name_in_encodings("gamma", 0, 0, 0, 0, 103, 0);
	init_name_in_encodings("germandbls", 251, 167, 223, 0, 0, 0);
	init_name_in_encodings("gradient", 0, 0, 0, 0, 209, 0);
	init_name_in_encodings("grave", 193, 96, 96, 0, 0, 0);
	init_name_in_encodings("greater", 62, 62, 62, 0, 62, 0);
	init_name_in_encodings("greaterequal", 0, 0, 0, 0, 179, 0);
	init_name_in_encodings("guillemotleft", 171, 199, 171, 0, 0, 0);
	init_name_in_encodings("guillemotright", 187, 200, 187, 0, 0, 0);
	init_name_in_encodings("guilsinglleft", 172, 220, 139, 0, 0, 0);
	init_name_in_encodings("guilsinglright", 173, 221, 155, 0, 0, 0);
	init_name_in_encodings("h", 104, 104, 104, 0, 0, 0);
	init_name_in_encodings("heart", 0, 0, 0, 0, 169, 0);
	init_name_in_encodings("hungarumlaut", 205, 253, 0, 0, 0, 0);
	init_name_in_encodings("hyphen", 45, 45, 45, 45, 0, 0);
	init_name_in_encodings("hypheninferior", 0, 0, 0, 95, 0, 0);
	init_name_in_encodings("hyphensuperior", 0, 0, 0, 209, 0, 0);
	init_name_in_encodings("i", 105, 105, 105, 0, 0, 0);
	init_name_in_encodings("iacute", 0, 146, 237, 0, 0, 0);
	init_name_in_encodings("icircumflex", 0, 148, 238, 0, 0, 0);
	init_name_in_encodings("idieresis", 0, 149, 239, 0, 0, 0);
	init_name_in_encodings("igrave", 0, 147, 236, 0, 0, 0);
	init_name_in_encodings("infinity", 0, 0, 0, 0, 165, 0);
	init_name_in_encodings("integral", 0, 0, 0, 0, 242, 0);
	init_name_in_encodings("integralbt", 0, 0, 0, 0, 245, 0);
	init_name_in_encodings("integralex", 0, 0, 0, 0, 244, 0);
	init_name_in_encodings("integraltp", 0, 0, 0, 0, 243, 0);
	init_name_in_encodings("intersection", 0, 0, 0, 0, 199, 0);
	init_name_in_encodings("iota", 0, 0, 0, 0, 105, 0);
	init_name_in_encodings("isuperior", 0, 0, 0, 233, 0, 0);
	init_name_in_encodings("j", 106, 106, 106, 0, 0, 0);
	init_name_in_encodings("k", 107, 107, 107, 0, 0, 0);
	init_name_in_encodings("kappa", 0, 0, 0, 0, 107, 0);
	init_name_in_encodings("l", 108, 108, 108, 0, 0, 0);
	init_name_in_encodings("lambda", 0, 0, 0, 0, 108, 0);
	init_name_in_encodings("less", 60, 60, 60, 0, 60, 0);
	init_name_in_encodings("lessequal", 0, 0, 0, 0, 163, 0);
	init_name_in_encodings("logicaland", 0, 0, 0, 0, 217, 0);
	init_name_in_encodings("logicalnot", 0, 194, 172, 0, 216, 0);
	init_name_in_encodings("logicalor", 0, 0, 0, 0, 218, 0);
	init_name_in_encodings("lozenge", 0, 0, 0, 0, 224, 0);
	init_name_in_encodings("lslash", 248, 0, 0, 0, 0, 0);
	init_name_in_encodings("lsuperior", 0, 0, 0, 241, 0, 0);
	init_name_in_encodings("m", 109, 109, 109, 0, 0, 0);
	init_name_in_encodings("macron", 197, 248, 175, 0, 0, 0);
	init_name_in_encodings("minus", 0, 0, 0, 0, 45, 0);
	init_name_in_encodings("minute", 0, 0, 0, 0, 162, 0);
	init_name_in_encodings("msuperior", 0, 0, 0, 247, 0, 0);
	init_name_in_encodings("mu", 0, 181, 181, 0, 109, 0);
	init_name_in_encodings("multiply", 0, 0, 215, 0, 180, 0);
	init_name_in_encodings("n", 110, 110, 110, 0, 0, 0);
	init_name_in_encodings("nine", 57, 57, 57, 0, 57, 0);
	init_name_in_encodings("nineinferior", 0, 0, 0, 187, 0, 0);
	init_name_in_encodings("nineoldstyle", 0, 0, 0, 57, 0, 0);
	init_name_in_encodings("ninesuperior", 0, 0, 0, 225, 0, 0);
	init_name_in_encodings("notelement", 0, 0, 0, 0, 207, 0);
	init_name_in_encodings("notequal", 0, 0, 0, 0, 185, 0);
	init_name_in_encodings("notsubset", 0, 0, 0, 0, 203, 0);
	init_name_in_encodings("nsuperior", 0, 0, 0, 246, 0, 0);
	init_name_in_encodings("ntilde", 0, 150, 241, 0, 0, 0);
	init_name_in_encodings("nu", 0, 0, 0, 0, 110, 0);
	init_name_in_encodings("numbersign", 35, 35, 35, 0, 35, 0);
	init_name_in_encodings("o", 111, 111, 111, 0, 0, 0);
	init_name_in_encodings("oacute", 0, 151, 243, 0, 0, 0);
	init_name_in_encodings("ocircumflex", 0, 153, 244, 0, 0, 0);
	init_name_in_encodings("odieresis", 0, 154, 246, 0, 0, 0);
	init_name_in_encodings("oe", 250, 207, 156, 0, 0, 0);
	init_name_in_encodings("ogonek", 206, 254, 0, 0, 0, 0);
	init_name_in_encodings("ograve", 0, 152, 242, 0, 0, 0);
	init_name_in_encodings("omega", 0, 0, 0, 0, 119, 0);
	init_name_in_encodings("omega1", 0, 0, 0, 0, 118, 0);
	init_name_in_encodings("omicron", 0, 0, 0, 0, 111, 0);
	init_name_in_encodings("one", 49, 49, 49, 0, 49, 0);
	init_name_in_encodings("onedotenleader", 0, 0, 0, 43, 0, 0);
	init_name_in_encodings("oneeighth", 0, 0, 0, 74, 0, 0);
	init_name_in_encodings("onefitted", 0, 0, 0, 124, 0, 0);
	init_name_in_encodings("onehalf", 0, 0, 0, 72, 0, 0);
	init_name_in_encodings("onehalf", 0, 0, 189, 0, 0, 0);
	init_name_in_encodings("oneinferior", 0, 0, 0, 193, 0, 0);
	init_name_in_encodings("oneoldstyle", 0, 0, 0, 49, 0, 0);
	init_name_in_encodings("onequarter", 0, 0, 188, 71, 0, 0);
	init_name_in_encodings("onesuperior", 0, 0, 185, 218, 0, 0);
	init_name_in_encodings("onethird", 0, 0, 0, 78, 0, 0);
	init_name_in_encodings("ordfeminine", 227, 187, 170, 0, 0, 0);
	init_name_in_encodings("ordmasculine", 235, 188, 186, 0, 0, 0);
	init_name_in_encodings("oslash", 249, 191, 248, 0, 0, 0);
	init_name_in_encodings("osuperior", 0, 0, 0, 175, 0, 0);
	init_name_in_encodings("otilde", 0, 155, 245, 0, 0, 0);
	init_name_in_encodings("p", 112, 112, 112, 0, 0, 0);
	init_name_in_encodings("paragraph", 182, 166, 182, 0, 0, 0);
	init_name_in_encodings("parenleft", 40, 40, 40, 0, 40, 0);
	init_name_in_encodings("parenleftbt", 0, 0, 0, 0, 232, 0);
	init_name_in_encodings("parenleftex", 0, 0, 0, 0, 231, 0);
	init_name_in_encodings("parenleftinferior", 0, 0, 0, 91, 0, 0);
	init_name_in_encodings("parenleftsuperior", 0, 0, 0, 40, 0, 0);
	init_name_in_encodings("parenlefttp", 0, 0, 0, 0, 230, 0);
	init_name_in_encodings("parenright", 41, 41, 41, 0, 41, 0);
	init_name_in_encodings("parenrightbt", 0, 0, 0, 0, 248, 0);
	init_name_in_encodings("parenrightex", 0, 0, 0, 0, 247, 0);
	init_name_in_encodings("parenrightinferior", 0, 0, 0, 93, 0, 0);
	init_name_in_encodings("parenrightsuperior", 0, 0, 0, 41, 0, 0);
	init_name_in_encodings("parenrighttp", 0, 0, 0, 0, 246, 0);
	init_name_in_encodings("partialdiff", 0, 0, 0, 0, 182, 0);
	init_name_in_encodings("percent", 37, 37, 37, 0, 37, 0);
	init_name_in_encodings("period", 46, 46, 46, 46, 46, 0);
	init_name_in_encodings("periodcentered", 180, 225, 183, 0, 0, 0);
	init_name_in_encodings("periodinferior", 0, 0, 0, 179, 0, 0);
	init_name_in_encodings("periodsuperior", 0, 0, 0, 249, 0, 0);
	init_name_in_encodings("perpendicular", 0, 0, 0, 0, 94, 0);
	init_name_in_encodings("perthousand", 189, 228, 137, 0, 0, 0);
	init_name_in_encodings("phi", 0, 0, 0, 0, 102, 0);
	init_name_in_encodings("phi1", 0, 0, 0, 0, 106, 0);
	init_name_in_encodings("pi", 0, 0, 0, 0, 112, 0);
	init_name_in_encodings("plus", 43, 43, 43, 0, 43, 0);
	init_name_in_encodings("plusminus", 0, 177, 177, 0, 177, 0);
	init_name_in_encodings("product", 0, 0, 0, 0, 213, 0);
	init_name_in_encodings("propersubset", 0, 0, 0, 0, 204, 0);
	init_name_in_encodings("propersuperset", 0, 0, 0, 0, 201, 0);
	init_name_in_encodings("proportional", 0, 0, 0, 0, 181, 0);
	init_name_in_encodings("psi", 0, 0, 0, 0, 121, 0);
	init_name_in_encodings("q", 113, 113, 113, 0, 0, 0);
	init_name_in_encodings("question", 63, 63, 63, 0, 63, 0);
	init_name_in_encodings("questiondown", 191, 192, 191, 0, 0, 0);
	init_name_in_encodings("questiondownsmall", 0, 0, 0, 192, 0, 0);
	init_name_in_encodings("questionsmall", 0, 0, 0, 63, 0, 0);
	init_name_in_encodings("quotedbl", 34, 34, 34, 0, 0, 0);
	init_name_in_encodings("quotedblbase", 185, 227, 132, 0, 0, 0);
	init_name_in_encodings("quotedblleft", 170, 210, 147, 0, 0, 0);
	init_name_in_encodings("quotedblright", 186, 211, 148, 0, 0, 0);
	init_name_in_encodings("quoteleft", 96, 212, 145, 0, 0, 0);
	init_name_in_encodings("quoteright", 39, 213, 146, 0, 0, 0);
	init_name_in_encodings("quotesinglbase", 184, 226, 130, 0, 0, 0);
	init_name_in_encodings("quotesingle", 169, 39, 39, 0, 0, 0);
	init_name_in_encodings("r", 114, 114, 114, 0, 0, 0);
	init_name_in_encodings("radical", 0, 0, 0, 0, 214, 0);
	init_name_in_encodings("radicalex", 0, 0, 0, 0, 96, 0);
	init_name_in_encodings("reflexsubset", 0, 0, 0, 0, 205, 0);
	init_name_in_encodings("reflexsuperset", 0, 0, 0, 0, 202, 0);
	init_name_in_encodings("registered", 0, 168, 174, 0, 0, 0);
	init_name_in_encodings("registersans", 0, 0, 0, 0, 226, 0);
	init_name_in_encodings("registerserif", 0, 0, 0, 0, 210, 0);
	init_name_in_encodings("rho", 0, 0, 0, 0, 114, 0);
	init_name_in_encodings("ring", 202, 251, 176, 0, 0, 0);
	init_name_in_encodings("rsuperior", 0, 0, 0, 229, 0, 0);
	init_name_in_encodings("rupiah", 0, 0, 0, 125, 0, 0);
	init_name_in_encodings("s", 115, 115, 115, 0, 0, 0);
	init_name_in_encodings("scaron", 0, 0, 154, 0, 0, 0);
	init_name_in_encodings("second", 0, 0, 0, 0, 178, 0);
	init_name_in_encodings("section", 167, 164, 167, 0, 0, 0);
	init_name_in_encodings("semicolon", 59, 59, 59, 59, 59, 0);
	init_name_in_encodings("seven", 55, 55, 55, 0, 55, 0);
	init_name_in_encodings("seveneighths", 0, 0, 0, 77, 0, 0);
	init_name_in_encodings("seveninferior", 0, 0, 0, 166, 0, 0);
	init_name_in_encodings("sevenoldstyle", 0, 0, 0, 55, 0, 0);
	init_name_in_encodings("sevensuperior", 0, 0, 0, 224, 0, 0);
	init_name_in_encodings("sigma", 0, 0, 0, 0, 115, 0);
	init_name_in_encodings("sigma1", 0, 0, 0, 0, 86, 0);
	init_name_in_encodings("similar", 0, 0, 0, 0, 126, 0);
	init_name_in_encodings("six", 54, 54, 54, 0, 54, 0);
	init_name_in_encodings("sixinferior", 0, 0, 0, 164, 0, 0);
	init_name_in_encodings("sixoldstyle", 0, 0, 0, 54, 0, 0);
	init_name_in_encodings("sixsuperior", 0, 0, 0, 223, 0, 0);
	init_name_in_encodings("slash", 47, 47, 47, 0, 47, 0);
	init_name_in_encodings("space", 32, 32, 32, 32, 32, 32);
	init_name_in_encodings("spade", 0, 0, 0, 0, 170, 0);
	init_name_in_encodings("ssuperior", 0, 0, 0, 234, 0, 0);
	init_name_in_encodings("sterling", 163, 163, 163, 0, 0, 0);
	init_name_in_encodings("suchthat", 0, 0, 0, 0, 39, 0);
	init_name_in_encodings("summation", 0, 0, 0, 0, 229, 0);
	init_name_in_encodings("t", 116, 116, 116, 0, 0, 0);
	init_name_in_encodings("tau", 0, 0, 0, 0, 116, 0);
	init_name_in_encodings("therefore", 0, 0, 0, 0, 92, 0);
	init_name_in_encodings("theta", 0, 0, 0, 0, 113, 0);
	init_name_in_encodings("theta1", 0, 0, 0, 0, 74, 0);
	init_name_in_encodings("thorn", 0, 0, 254, 0, 0, 0);
	init_name_in_encodings("three", 51, 51, 51, 0, 51, 0);
	init_name_in_encodings("threeeighths", 0, 0, 0, 75, 0, 0);
	init_name_in_encodings("threeinferior", 0, 0, 0, 163, 0, 0);
	init_name_in_encodings("threeoldstyle", 0, 0, 0, 51, 0, 0);
	init_name_in_encodings("threequarters", 0, 0, 190, 73, 0, 0);
	init_name_in_encodings("threequartersemdash", 0, 0, 0, 61, 0, 0);
	init_name_in_encodings("threesuperior", 0, 0, 179, 28, 0, 0);
	init_name_in_encodings("tilde", 196, 247, 152, 0, 0, 0);
	init_name_in_encodings("trademark", 0, 170, 153, 0, 0, 0);
	init_name_in_encodings("trademarksans", 0, 0, 0, 0, 228, 0);
	init_name_in_encodings("trademarkserif", 0, 0, 0, 0, 212, 0);
	init_name_in_encodings("tsuperior", 0, 0, 0, 230, 0, 0);
	init_name_in_encodings("two", 50, 50, 50, 0, 50, 0);
	init_name_in_encodings("twodotenleader", 0, 0, 0, 42, 0, 0);
	init_name_in_encodings("twoinferior", 0, 0, 0, 170, 0, 0);
	init_name_in_encodings("twooldstyle", 0, 0, 0, 50, 0, 0);
	init_name_in_encodings("twosuperior", 0, 0, 178, 219, 0, 0);
	init_name_in_encodings("twothirds", 0, 0, 0, 117, 0, 0);
	init_name_in_encodings("u", 117, 117, 117, 0, 0, 0);
	init_name_in_encodings("uacute", 0, 156, 250, 0, 0, 0);
	init_name_in_encodings("ucircumflex", 0, 158, 251, 0, 0, 0);
	init_name_in_encodings("udieresis", 0, 159, 252, 0, 0, 0);
	init_name_in_encodings("ugrave", 0, 157, 249, 0, 0, 0);
	init_name_in_encodings("underscore", 95, 95, 95, 0, 95, 0);
	init_name_in_encodings("union", 0, 0, 0, 0, 200, 0);
	init_name_in_encodings("universal", 0, 0, 0, 0, 34, 0);
	init_name_in_encodings("upsilon", 0, 0, 0, 0, 117, 0);
	init_name_in_encodings("v", 118, 118, 118, 0, 0, 0);
	init_name_in_encodings("w", 119, 119, 119, 0, 0, 0);
	init_name_in_encodings("weierstrass", 0, 0, 0, 0, 195, 0);
	init_name_in_encodings("x", 120, 120, 120, 0, 0, 0);
	init_name_in_encodings("xi", 0, 0, 0, 0, 120, 0);
	init_name_in_encodings("y", 121, 121, 121, 0, 0, 0);
	init_name_in_encodings("yacute", 0, 0, 253, 0, 0, 0);
	init_name_in_encodings("ydieresis", 0, 216, 255, 0, 0, 0);
	init_name_in_encodings("yen", 165, 180, 165, 0, 0, 0);
	init_name_in_encodings("z", 122, 122, 122, 0, 0, 0);
	init_name_in_encodings("zcaron", 0, 0, 158, 0, 0, 0);
	init_name_in_encodings("zero", 48, 48, 48, 0, 48, 0);
	init_name_in_encodings("zeroinferior", 0, 0, 0, 188, 0, 0);
	init_name_in_encodings("zerooldstyle", 0, 0, 0, 48, 0, 0);
	init_name_in_encodings("zerosuperior", 0, 0, 0, 226, 0, 0);
	init_name_in_encodings("zeta", 0, 0, 0, 0, 122, 0);
}

//#pragma mark -




StandardWidths::StandardWidths()
{
	// intialize
	init_name_in_widths("A", width_info(667, 722, 667, 722, 722, 722, 611, 667));
	init_name_in_widths("AE", width_info(1000, 1000, 1000, 1000, 889, 1000, 889, 944));
	init_name_in_widths("Aacute", width_info(667, 722, 667, 722, 722, 722, 611, 667));
	init_name_in_widths("Abreve", width_info(667, 722, 667, 722, 722, 722, 611, 667));
	init_name_in_widths("Acircumflex", width_info(667, 722, 667, 722, 722, 722, 611, 667));
	init_name_in_widths("Adieresis", width_info(667, 722, 667, 722, 722, 722, 611, 667));
	init_name_in_widths("Agrave", width_info(667, 722, 667, 722, 722, 722, 611, 667));
	init_name_in_widths("Amacron", width_info(667, 722, 667, 722, 722, 722, 611, 667));
	init_name_in_widths("Aogonek", width_info(667, 722, 667, 722, 722, 722, 611, 667));
	init_name_in_widths("Aring", width_info(667, 722, 667, 722, 722, 722, 611, 667));
	init_name_in_widths("Atilde", width_info(667, 722, 667, 722, 722, 722, 611, 667));
	init_name_in_widths("B", width_info(667, 722, 667, 722, 667, 667, 611, 667));
	init_name_in_widths("C", width_info(722, 722, 722, 722, 667, 722, 667, 667));
	init_name_in_widths("Cacute", width_info(722, 722, 722, 722, 667, 722, 667, 667));
	init_name_in_widths("Ccaron", width_info(722, 722, 722, 722, 667, 722, 667, 667));
	init_name_in_widths("Ccedilla", width_info(722, 722, 722, 722, 667, 722, 667, 667));
	init_name_in_widths("D", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Dcaron", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Dcroat", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Delta", width_info(612, 612, 612, 612, 612, 612, 612, 612));
	init_name_in_widths("E", width_info(667, 667, 667, 667, 611, 667, 611, 667));
	init_name_in_widths("Eacute", width_info(667, 667, 667, 667, 611, 667, 611, 667));
	init_name_in_widths("Ecaron", width_info(667, 667, 667, 667, 611, 667, 611, 667));
	init_name_in_widths("Ecircumflex", width_info(667, 667, 667, 667, 611, 667, 611, 667));
	init_name_in_widths("Edieresis", width_info(667, 667, 667, 667, 611, 667, 611, 667));
	init_name_in_widths("Edotaccent", width_info(667, 667, 667, 667, 611, 667, 611, 667));
	init_name_in_widths("Egrave", width_info(667, 667, 667, 667, 611, 667, 611, 667));
	init_name_in_widths("Emacron", width_info(667, 667, 667, 667, 611, 667, 611, 667));
	init_name_in_widths("Eogonek", width_info(667, 667, 667, 667, 611, 667, 611, 667));
	init_name_in_widths("Eth", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Euro", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("F", width_info(611, 611, 611, 611, 556, 611, 611, 667));
	init_name_in_widths("G", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("Gbreve", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("Gcommaaccent", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("H", width_info(722, 722, 722, 722, 722, 778, 722, 778));
	init_name_in_widths("I", width_info(278, 278, 278, 278, 333, 389, 333, 389));
	init_name_in_widths("Iacute", width_info(278, 278, 278, 278, 333, 389, 333, 389));
	init_name_in_widths("Icircumflex", width_info(278, 278, 278, 278, 333, 389, 333, 389));
	init_name_in_widths("Idieresis", width_info(278, 278, 278, 278, 333, 389, 333, 389));
	init_name_in_widths("Idotaccent", width_info(278, 278, 278, 278, 333, 389, 333, 389));
	init_name_in_widths("Igrave", width_info(278, 278, 278, 278, 333, 389, 333, 389));
	init_name_in_widths("Imacron", width_info(278, 278, 278, 278, 333, 389, 333, 389));
	init_name_in_widths("Iogonek", width_info(278, 278, 278, 278, 333, 389, 333, 389));
	init_name_in_widths("J", width_info(500, 556, 500, 556, 389, 500, 444, 500));
	init_name_in_widths("K", width_info(667, 722, 667, 722, 722, 778, 667, 667));
	init_name_in_widths("Kcommaaccent", width_info(667, 722, 667, 722, 722, 778, 667, 667));
	init_name_in_widths("L", width_info(556, 611, 556, 611, 611, 667, 556, 611));
	init_name_in_widths("Lacute", width_info(556, 611, 556, 611, 611, 667, 556, 611));
	init_name_in_widths("Lcaron", width_info(556, 611, 556, 611, 611, 667, 611, 611));
	init_name_in_widths("Lcommaaccent", width_info(556, 611, 556, 611, 611, 667, 556, 611));
	init_name_in_widths("Lslash", width_info(556, 611, 556, 611, 611, 667, 556, 611));
	init_name_in_widths("M", width_info(833, 833, 833, 833, 889, 944, 833, 889));
	init_name_in_widths("N", width_info(722, 722, 722, 722, 722, 722, 667, 722));
	init_name_in_widths("Nacute", width_info(722, 722, 722, 722, 722, 722, 667, 722));
	init_name_in_widths("Ncaron", width_info(722, 722, 722, 722, 722, 722, 667, 722));
	init_name_in_widths("Ncommaaccent", width_info(722, 722, 722, 722, 722, 722, 667, 722));
	init_name_in_widths("Ntilde", width_info(722, 722, 722, 722, 722, 722, 667, 722));
	init_name_in_widths("O", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("OE", width_info(1000, 1000, 1000, 1000, 889, 1000, 944, 944));
	init_name_in_widths("Oacute", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("Ocircumflex", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("Odieresis", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("Ograve", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("Ohungarumlaut", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("Omacron", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("Oslash", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("Otilde", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("P", width_info(667, 667, 667, 667, 556, 611, 611, 611));
	init_name_in_widths("Q", width_info(778, 778, 778, 778, 722, 778, 722, 722));
	init_name_in_widths("R", width_info(722, 722, 722, 722, 667, 722, 611, 667));
	init_name_in_widths("Racute", width_info(722, 722, 722, 722, 667, 722, 611, 667));
	init_name_in_widths("Rcaron", width_info(722, 722, 722, 722, 667, 722, 611, 667));
	init_name_in_widths("Rcommaaccent", width_info(722, 722, 722, 722, 667, 722, 611, 667));
	init_name_in_widths("S", width_info(667, 667, 667, 667, 556, 556, 500, 556));
	init_name_in_widths("Sacute", width_info(667, 667, 667, 667, 556, 556, 500, 556));
	init_name_in_widths("Scaron", width_info(667, 667, 667, 667, 556, 556, 500, 556));
	init_name_in_widths("Scedilla", width_info(667, 667, 667, 667, 556, 556, 500, 556));
	init_name_in_widths("Scommaaccent", width_info(667, 667, 667, 667, 556, 556, 500, 556));
	init_name_in_widths("T", width_info(611, 611, 611, 611, 611, 667, 556, 611));
	init_name_in_widths("Tcaron", width_info(611, 611, 611, 611, 611, 667, 556, 611));
	init_name_in_widths("Tcommaaccent", width_info(611, 611, 611, 611, 611, 667, 556, 611));
	init_name_in_widths("Thorn", width_info(667, 667, 667, 667, 556, 611, 611, 611));
	init_name_in_widths("U", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Uacute", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Ucircumflex", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Udieresis", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Ugrave", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Uhungarumlaut", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Umacron", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Uogonek", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("Uring", width_info(722, 722, 722, 722, 722, 722, 722, 722));
	init_name_in_widths("V", width_info(667, 667, 667, 667, 722, 722, 611, 667));
	init_name_in_widths("W", width_info(944, 944, 944, 944, 944, 1000, 833, 889));
	init_name_in_widths("X", width_info(667, 667, 667, 667, 722, 722, 611, 667));
	init_name_in_widths("Y", width_info(667, 667, 667, 667, 722, 722, 556, 611));
	init_name_in_widths("Yacute", width_info(667, 667, 667, 667, 722, 722, 556, 611));
	init_name_in_widths("Ydieresis", width_info(667, 667, 667, 667, 722, 722, 556, 611));
	init_name_in_widths("Z", width_info(611, 611, 611, 611, 611, 667, 556, 611));
	init_name_in_widths("Zacute", width_info(611, 611, 611, 611, 611, 667, 556, 611));
	init_name_in_widths("Zcaron", width_info(611, 611, 611, 611, 611, 667, 556, 611));
	init_name_in_widths("Zdotaccent", width_info(611, 611, 611, 611, 611, 667, 556, 611));
	init_name_in_widths("a", width_info(556, 556, 556, 556, 444, 500, 500, 500));
	init_name_in_widths("aacute", width_info(556, 556, 556, 556, 444, 500, 500, 500));
	init_name_in_widths("abreve", width_info(556, 556, 556, 556, 444, 500, 500, 500));
	init_name_in_widths("acircumflex", width_info(556, 556, 556, 556, 444, 500, 500, 500));
	init_name_in_widths("acute", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("adieresis", width_info(556, 556, 556, 556, 444, 500, 500, 500));
	init_name_in_widths("ae", width_info(889, 889, 889, 889, 667, 722, 667, 722));
	init_name_in_widths("agrave", width_info(556, 556, 556, 556, 444, 500, 500, 500));
	init_name_in_widths("amacron", width_info(556, 556, 556, 556, 444, 500, 500, 500));
	init_name_in_widths("ampersand", width_info(667, 722, 667, 722, 778, 833, 778, 778));
	init_name_in_widths("aogonek", width_info(556, 556, 556, 556, 444, 500, 500, 500));
	init_name_in_widths("aring", width_info(556, 556, 556, 556, 444, 500, 500, 500));
	init_name_in_widths("asciicircum", width_info(469, 584, 469, 584, 469, 581, 422, 570));
	init_name_in_widths("asciitilde", width_info(584, 584, 584, 584, 541, 520, 541, 570));
	init_name_in_widths("asterisk", width_info(389, 389, 389, 389, 500, 500, 500, 500));
	init_name_in_widths("at", width_info(1015, 975, 1015, 975, 921, 930, 920, 832));
	init_name_in_widths("atilde", width_info(556, 556, 556, 556, 444, 500, 500, 500));
	init_name_in_widths("b", width_info(556, 611, 556, 611, 500, 556, 500, 500));
	init_name_in_widths("backslash", width_info(278, 278, 278, 278, 278, 278, 278, 278));
	init_name_in_widths("bar", width_info(260, 280, 260, 280, 200, 220, 275, 220));
	init_name_in_widths("braceleft", width_info(334, 389, 334, 389, 480, 394, 400, 348));
	init_name_in_widths("braceright", width_info(334, 389, 334, 389, 480, 394, 400, 348));
	init_name_in_widths("bracketleft", width_info(278, 333, 278, 333, 333, 333, 389, 333));
	init_name_in_widths("bracketright", width_info(278, 333, 278, 333, 333, 333, 389, 333));
	init_name_in_widths("breve", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("brokenbar", width_info(260, 280, 260, 280, 200, 220, 275, 220));
	init_name_in_widths("bullet", width_info(350, 350, 350, 350, 350, 350, 350, 350));
	init_name_in_widths("c", width_info(500, 556, 500, 556, 444, 444, 444, 444));
	init_name_in_widths("cacute", width_info(500, 556, 500, 556, 444, 444, 444, 444));
	init_name_in_widths("caron", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("ccaron", width_info(500, 556, 500, 556, 444, 444, 444, 444));
	init_name_in_widths("ccedilla", width_info(500, 556, 500, 556, 444, 444, 444, 444));
	init_name_in_widths("cedilla", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("cent", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("circumflex", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("colon", width_info(278, 333, 278, 333, 278, 333, 333, 333));
	init_name_in_widths("comma", width_info(278, 278, 278, 278, 250, 250, 250, 250));
	init_name_in_widths("commaaccent", width_info(250, 250, 250, 250, 250, 250, 250, 250));
	init_name_in_widths("copyright", width_info(737, 737, 737, 737, 760, 747, 760, 747));
	init_name_in_widths("currency", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("d", width_info(556, 611, 556, 611, 500, 556, 500, 500));
	init_name_in_widths("dagger", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("daggerdbl", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("dcaron", width_info(643, 743, 643, 743, 588, 672, 544, 608));
	init_name_in_widths("dcroat", width_info(556, 611, 556, 611, 500, 556, 500, 500));
	init_name_in_widths("degree", width_info(400, 400, 400, 400, 400, 400, 400, 400));
	init_name_in_widths("dieresis", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("divide", width_info(584, 584, 584, 584, 564, 570, 675, 570));
	init_name_in_widths("dollar", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("dotaccent", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("dotlessi", width_info(278, 278, 278, 278, 278, 278, 278, 278));
	init_name_in_widths("e", width_info(556, 556, 556, 556, 444, 444, 444, 444));
	init_name_in_widths("eacute", width_info(556, 556, 556, 556, 444, 444, 444, 444));
	init_name_in_widths("ecaron", width_info(556, 556, 556, 556, 444, 444, 444, 444));
	init_name_in_widths("ecircumflex", width_info(556, 556, 556, 556, 444, 444, 444, 444));
	init_name_in_widths("edieresis", width_info(556, 556, 556, 556, 444, 444, 444, 444));
	init_name_in_widths("edotaccent", width_info(556, 556, 556, 556, 444, 444, 444, 444));
	init_name_in_widths("egrave", width_info(556, 556, 556, 556, 444, 444, 444, 444));
	init_name_in_widths("eight", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("ellipsis", width_info(1000, 1000, 1000, 1000, 1000, 1000, 889, 1000));
	init_name_in_widths("emacron", width_info(556, 556, 556, 556, 444, 444, 444, 444));
	init_name_in_widths("emdash", width_info(1000, 1000, 1000, 1000, 1000, 1000, 889, 1000));
	init_name_in_widths("endash", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("eogonek", width_info(556, 556, 556, 556, 444, 444, 444, 444));
	init_name_in_widths("equal", width_info(584, 584, 584, 584, 564, 570, 675, 570));
	init_name_in_widths("eth", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("exclam", width_info(278, 333, 278, 333, 333, 333, 333, 389));
	init_name_in_widths("exclamdown", width_info(333, 333, 333, 333, 333, 333, 389, 389));
	init_name_in_widths("f", width_info(278, 333, 278, 333, 333, 333, 278, 333));
	init_name_in_widths("fi", width_info(500, 611, 500, 611, 556, 556, 500, 556));
	init_name_in_widths("five", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("fl", width_info(500, 611, 500, 611, 556, 556, 500, 556));
	init_name_in_widths("florin", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("four", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("fraction", width_info(167, 167, 167, 167, 167, 167, 167, 167));
	init_name_in_widths("g", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("gbreve", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("gcommaaccent", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("germandbls", width_info(611, 611, 611, 611, 500, 556, 500, 500));
	init_name_in_widths("grave", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("greater", width_info(584, 584, 584, 584, 564, 570, 675, 570));
	init_name_in_widths("greaterequal", width_info(549, 549, 549, 549, 549, 549, 549, 549));
	init_name_in_widths("guillemotleft", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("guillemotright", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("guilsinglleft", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("guilsinglright", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("h", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("hungarumlaut", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("hyphen", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("i", width_info(222, 278, 222, 278, 278, 278, 278, 278));
	init_name_in_widths("iacute", width_info(278, 278, 278, 278, 278, 278, 278, 278));
	init_name_in_widths("icircumflex", width_info(278, 278, 278, 278, 278, 278, 278, 278));
	init_name_in_widths("idieresis", width_info(278, 278, 278, 278, 278, 278, 278, 278));
	init_name_in_widths("igrave", width_info(278, 278, 278, 278, 278, 278, 278, 278));
	init_name_in_widths("imacron", width_info(278, 278, 278, 278, 278, 278, 278, 278));
	init_name_in_widths("iogonek", width_info(222, 278, 222, 278, 278, 278, 278, 278));
	init_name_in_widths("j", width_info(222, 278, 222, 278, 278, 333, 278, 278));
	init_name_in_widths("k", width_info(500, 556, 500, 556, 500, 556, 444, 500));
	init_name_in_widths("kcommaaccent", width_info(500, 556, 500, 556, 500, 556, 444, 500));
	init_name_in_widths("l", width_info(222, 278, 222, 278, 278, 278, 278, 278));
	init_name_in_widths("lacute", width_info(222, 278, 222, 278, 278, 278, 278, 278));
	init_name_in_widths("lcaron", width_info(299, 400, 299, 400, 344, 394, 300, 382));
	init_name_in_widths("lcommaaccent", width_info(222, 278, 222, 278, 278, 278, 278, 278));
	init_name_in_widths("less", width_info(584, 584, 584, 584, 564, 570, 675, 570));
	init_name_in_widths("lessequal", width_info(549, 549, 549, 549, 549, 549, 549, 549));
	init_name_in_widths("logicalnot", width_info(584, 584, 584, 584, 564, 570, 675, 606));
	init_name_in_widths("lozenge", width_info(471, 494, 471, 494, 471, 494, 471, 494));
	init_name_in_widths("lslash", width_info(222, 278, 222, 278, 278, 278, 278, 278));
	init_name_in_widths("m", width_info(833, 889, 833, 889, 778, 833, 722, 778));
	init_name_in_widths("macron", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("minus", width_info(584, 584, 584, 584, 564, 570, 675, 606));
	init_name_in_widths("mu", width_info(556, 611, 556, 611, 500, 556, 500, 576));
	init_name_in_widths("multiply", width_info(584, 584, 584, 584, 564, 570, 675, 570));
	init_name_in_widths("n", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("nacute", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("ncaron", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("ncommaaccent", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("nine", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("notequal", width_info(549, 549, 549, 549, 549, 549, 549, 549));
	init_name_in_widths("ntilde", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("numbersign", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("o", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("oacute", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("ocircumflex", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("odieresis", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("oe", width_info(944, 944, 944, 944, 722, 722, 667, 722));
	init_name_in_widths("ogonek", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("ograve", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("ohungarumlaut", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("omacron", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("one", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("onehalf", width_info(834, 834, 834, 834, 750, 750, 750, 750));
	init_name_in_widths("onequarter", width_info(834, 834, 834, 834, 750, 750, 750, 750));
	init_name_in_widths("onesuperior", width_info(333, 333, 333, 333, 300, 300, 300, 300));
	init_name_in_widths("ordfeminine", width_info(370, 370, 370, 370, 276, 300, 276, 266));
	init_name_in_widths("ordmasculine", width_info(365, 365, 365, 365, 310, 330, 310, 300));
	init_name_in_widths("oslash", width_info(611, 611, 611, 611, 500, 500, 500, 500));
	init_name_in_widths("otilde", width_info(556, 611, 556, 611, 500, 500, 500, 500));
	init_name_in_widths("p", width_info(556, 611, 556, 611, 500, 556, 500, 500));
	init_name_in_widths("paragraph", width_info(537, 556, 537, 556, 453, 540, 523, 500));
	init_name_in_widths("parenleft", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("parenright", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("partialdiff", width_info(476, 494, 476, 494, 476, 494, 476, 494));
	init_name_in_widths("percent", width_info(889, 889, 889, 889, 833, 1000, 833, 833));
	init_name_in_widths("period", width_info(278, 278, 278, 278, 250, 250, 250, 250));
	init_name_in_widths("periodcentered", width_info(278, 278, 278, 278, 250, 250, 250, 250));
	init_name_in_widths("perthousand", width_info(1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000));
	init_name_in_widths("plus", width_info(584, 584, 584, 584, 564, 570, 675, 570));
	init_name_in_widths("plusminus", width_info(584, 584, 584, 584, 564, 570, 675, 570));
	init_name_in_widths("q", width_info(556, 611, 556, 611, 500, 556, 500, 500));
	init_name_in_widths("question", width_info(556, 611, 556, 611, 444, 500, 500, 500));
	init_name_in_widths("questiondown", width_info(611, 611, 611, 611, 444, 500, 500, 500));
	init_name_in_widths("quotedbl", width_info(355, 474, 355, 474, 408, 555, 420, 555));
	init_name_in_widths("quotedblbase", width_info(333, 500, 333, 500, 444, 500, 556, 500));
	init_name_in_widths("quotedblleft", width_info(333, 500, 333, 500, 444, 500, 556, 500));
	init_name_in_widths("quotedblright", width_info(333, 500, 333, 500, 444, 500, 556, 500));
	init_name_in_widths("quoteleft", width_info(222, 278, 222, 278, 333, 333, 333, 333));
	init_name_in_widths("quoteright", width_info(222, 278, 222, 278, 333, 333, 333, 333));
	init_name_in_widths("quotesinglbase", width_info(222, 278, 222, 278, 333, 333, 333, 333));
	init_name_in_widths("quotesingle", width_info(191, 238, 191, 238, 180, 278, 214, 278));
	init_name_in_widths("r", width_info(333, 389, 333, 389, 333, 444, 389, 389));
	init_name_in_widths("racute", width_info(333, 389, 333, 389, 333, 444, 389, 389));
	init_name_in_widths("radical", width_info(453, 549, 453, 549, 453, 549, 453, 549));
	init_name_in_widths("rcaron", width_info(333, 389, 333, 389, 333, 444, 389, 389));
	init_name_in_widths("rcommaaccent", width_info(333, 389, 333, 389, 333, 444, 389, 389));
	init_name_in_widths("registered", width_info(737, 737, 737, 737, 760, 747, 760, 747));
	init_name_in_widths("ring", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("s", width_info(500, 556, 500, 556, 389, 389, 389, 389));
	init_name_in_widths("sacute", width_info(500, 556, 500, 556, 389, 389, 389, 389));
	init_name_in_widths("scaron", width_info(500, 556, 500, 556, 389, 389, 389, 389));
	init_name_in_widths("scedilla", width_info(500, 556, 500, 556, 389, 389, 389, 389));
	init_name_in_widths("scommaaccent", width_info(500, 556, 500, 556, 389, 389, 389, 389));
	init_name_in_widths("section", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("semicolon", width_info(278, 333, 278, 333, 278, 333, 333, 333));
	init_name_in_widths("seven", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("six", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("slash", width_info(278, 278, 278, 278, 278, 278, 278, 278));
	init_name_in_widths("space", width_info(278, 278, 278, 278, 250, 250, 250, 250));
	init_name_in_widths("sterling", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("summation", width_info(600, 600, 600, 600, 600, 600, 600, 600));
	init_name_in_widths("t", width_info(278, 333, 278, 333, 278, 333, 278, 278));
	init_name_in_widths("tcaron", width_info(317, 389, 317, 389, 326, 416, 300, 366));
	init_name_in_widths("tcommaaccent", width_info(278, 333, 278, 333, 278, 333, 278, 278));
	init_name_in_widths("thorn", width_info(556, 611, 556, 611, 500, 556, 500, 500));
	init_name_in_widths("three", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("threequarters", width_info(834, 834, 834, 834, 750, 750, 750, 750));
	init_name_in_widths("threesuperior", width_info(333, 333, 333, 333, 300, 300, 300, 300));
	init_name_in_widths("tilde", width_info(333, 333, 333, 333, 333, 333, 333, 333));
	init_name_in_widths("trademark", width_info(1000, 1000, 1000, 1000, 980, 1000, 980, 1000));
	init_name_in_widths("two", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("twosuperior", width_info(333, 333, 333, 333, 300, 300, 300, 300));
	init_name_in_widths("u", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("uacute", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("ucircumflex", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("udieresis", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("ugrave", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("uhungarumlaut", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("umacron", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("underscore", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("uogonek", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("uring", width_info(556, 611, 556, 611, 500, 556, 500, 556));
	init_name_in_widths("v", width_info(500, 556, 500, 556, 500, 500, 444, 444));
	init_name_in_widths("w", width_info(722, 778, 722, 778, 722, 722, 667, 667));
	init_name_in_widths("x", width_info(500, 556, 500, 556, 500, 500, 444, 500));
	init_name_in_widths("y", width_info(500, 556, 500, 556, 500, 500, 444, 444));
	init_name_in_widths("yacute", width_info(500, 556, 500, 556, 500, 500, 444, 444));
	init_name_in_widths("ydieresis", width_info(500, 556, 500, 556, 500, 500, 444, 444));
	init_name_in_widths("yen", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_widths("z", width_info(500, 500, 500, 500, 444, 444, 389, 389));
	init_name_in_widths("zacute", width_info(500, 500, 500, 500, 444, 444, 389, 389));
	init_name_in_widths("zcaron", width_info(500, 500, 500, 500, 444, 444, 389, 389));
	init_name_in_widths("zdotaccent", width_info(500, 500, 500, 500, 444, 444, 389, 389));
	init_name_in_widths("zero", width_info(556, 556, 556, 556, 500, 500, 500, 500));
	init_name_in_spec("space", 250, true);
	init_name_in_spec("exclam", 333, true);
	init_name_in_spec("universal", 713, true);
	init_name_in_spec("numbersign", 500, true);
	init_name_in_spec("existential", 549, true);
	init_name_in_spec("percent", 833, true);
	init_name_in_spec("ampersand", 778, true);
	init_name_in_spec("suchthat", 439, true);
	init_name_in_spec("parenleft", 333, true);
	init_name_in_spec("parenright", 333, true);
	init_name_in_spec("asteriskmath", 500, true);
	init_name_in_spec("plus", 549, true);
	init_name_in_spec("comma", 250, true);
	init_name_in_spec("minus", 549, true);
	init_name_in_spec("period", 250, true);
	init_name_in_spec("slash", 278, true);
	init_name_in_spec("zero", 500, true);
	init_name_in_spec("one", 500, true);
	init_name_in_spec("two", 500, true);
	init_name_in_spec("three", 500, true);
	init_name_in_spec("four", 500, true);
	init_name_in_spec("five", 500, true);
	init_name_in_spec("six", 500, true);
	init_name_in_spec("seven", 500, true);
	init_name_in_spec("eight", 500, true);
	init_name_in_spec("nine", 500, true);
	init_name_in_spec("colon", 278, true);
	init_name_in_spec("semicolon", 278, true);
	init_name_in_spec("less", 549, true);
	init_name_in_spec("equal", 549, true);
	init_name_in_spec("greater", 549, true);
	init_name_in_spec("question", 444, true);
	init_name_in_spec("congruent", 549, true);
	init_name_in_spec("Alpha", 722, true);
	init_name_in_spec("Beta", 667, true);
	init_name_in_spec("Chi", 722, true);
	init_name_in_spec("Delta", 612, true);
	init_name_in_spec("Epsilon", 611, true);
	init_name_in_spec("Phi", 763, true);
	init_name_in_spec("Gamma", 603, true);
	init_name_in_spec("Eta", 722, true);
	init_name_in_spec("Iota", 333, true);
	init_name_in_spec("theta1", 631, true);
	init_name_in_spec("Kappa", 722, true);
	init_name_in_spec("Lambda", 686, true);
	init_name_in_spec("Mu", 889, true);
	init_name_in_spec("Nu", 722, true);
	init_name_in_spec("Omicron", 722, true);
	init_name_in_spec("Pi", 768, true);
	init_name_in_spec("Theta", 741, true);
	init_name_in_spec("Rho", 556, true);
	init_name_in_spec("Sigma", 592, true);
	init_name_in_spec("Tau", 611, true);
	init_name_in_spec("Upsilon", 690, true);
	init_name_in_spec("sigma1", 439, true);
	init_name_in_spec("Omega", 768, true);
	init_name_in_spec("Xi", 645, true);
	init_name_in_spec("Psi", 795, true);
	init_name_in_spec("Zeta", 611, true);
	init_name_in_spec("bracketleft", 333, true);
	init_name_in_spec("therefore", 863, true);
	init_name_in_spec("bracketright", 333, true);
	init_name_in_spec("perpendicular", 658, true);
	init_name_in_spec("underscore", 500, true);
	init_name_in_spec("radicalex", 500, true);
	init_name_in_spec("alpha", 631, true);
	init_name_in_spec("beta", 549, true);
	init_name_in_spec("chi", 549, true);
	init_name_in_spec("delta", 494, true);
	init_name_in_spec("epsilon", 439, true);
	init_name_in_spec("phi", 521, true);
	init_name_in_spec("gamma", 411, true);
	init_name_in_spec("eta", 603, true);
	init_name_in_spec("iota", 329, true);
	init_name_in_spec("phi1", 603, true);
	init_name_in_spec("kappa", 549, true);
	init_name_in_spec("lambda", 549, true);
	init_name_in_spec("mu", 576, true);
	init_name_in_spec("nu", 521, true);
	init_name_in_spec("omicron", 549, true);
	init_name_in_spec("pi", 549, true);
	init_name_in_spec("theta", 521, true);
	init_name_in_spec("rho", 549, true);
	init_name_in_spec("sigma", 603, true);
	init_name_in_spec("tau", 439, true);
	init_name_in_spec("upsilon", 576, true);
	init_name_in_spec("omega1", 713, true);
	init_name_in_spec("omega", 686, true);
	init_name_in_spec("xi", 493, true);
	init_name_in_spec("psi", 686, true);
	init_name_in_spec("zeta", 494, true);
	init_name_in_spec("braceleft", 480, true);
	init_name_in_spec("bar", 200, true);
	init_name_in_spec("braceright", 480, true);
	init_name_in_spec("similar", 549, true);
	init_name_in_spec("Euro", 750, true);
	init_name_in_spec("Upsilon1", 620, true);
	init_name_in_spec("minute", 247, true);
	init_name_in_spec("lessequal", 549, true);
	init_name_in_spec("fraction", 167, true);
	init_name_in_spec("infinity", 713, true);
	init_name_in_spec("florin", 500, true);
	init_name_in_spec("club", 753, true);
	init_name_in_spec("diamond", 753, true);
	init_name_in_spec("heart", 753, true);
	init_name_in_spec("spade", 753, true);
	init_name_in_spec("arrowboth", 1042, true);
	init_name_in_spec("arrowleft", 987, true);
	init_name_in_spec("arrowup", 603, true);
	init_name_in_spec("arrowright", 987, true);
	init_name_in_spec("arrowdown", 603, true);
	init_name_in_spec("degree", 400, true);
	init_name_in_spec("plusminus", 549, true);
	init_name_in_spec("second", 411, true);
	init_name_in_spec("greaterequal", 549, true);
	init_name_in_spec("multiply", 549, true);
	init_name_in_spec("proportional", 713, true);
	init_name_in_spec("partialdiff", 494, true);
	init_name_in_spec("bullet", 460, true);
	init_name_in_spec("divide", 549, true);
	init_name_in_spec("notequal", 549, true);
	init_name_in_spec("equivalence", 549, true);
	init_name_in_spec("approxequal", 549, true);
	init_name_in_spec("ellipsis", 1000, true);
	init_name_in_spec("arrowvertex", 603, true);
	init_name_in_spec("arrowhorizex", 1000, true);
	init_name_in_spec("carriagereturn", 658, true);
	init_name_in_spec("aleph", 823, true);
	init_name_in_spec("Ifraktur", 686, true);
	init_name_in_spec("Rfraktur", 795, true);
	init_name_in_spec("weierstrass", 987, true);
	init_name_in_spec("circlemultiply", 768, true);
	init_name_in_spec("circleplus", 768, true);
	init_name_in_spec("emptyset", 823, true);
	init_name_in_spec("intersection", 768, true);
	init_name_in_spec("union", 768, true);
	init_name_in_spec("propersuperset", 713, true);
	init_name_in_spec("reflexsuperset", 713, true);
	init_name_in_spec("notsubset", 713, true);
	init_name_in_spec("propersubset", 713, true);
	init_name_in_spec("reflexsubset", 713, true);
	init_name_in_spec("element", 713, true);
	init_name_in_spec("notelement", 713, true);
	init_name_in_spec("angle", 768, true);
	init_name_in_spec("gradient", 713, true);
	init_name_in_spec("registerserif", 790, true);
	init_name_in_spec("copyrightserif", 790, true);
	init_name_in_spec("trademarkserif", 890, true);
	init_name_in_spec("product", 823, true);
	init_name_in_spec("radical", 549, true);
	init_name_in_spec("dotmath", 250, true);
	init_name_in_spec("logicalnot", 713, true);
	init_name_in_spec("logicaland", 603, true);
	init_name_in_spec("logicalor", 603, true);
	init_name_in_spec("arrowdblboth", 1042, true);
	init_name_in_spec("arrowdblleft", 987, true);
	init_name_in_spec("arrowdblup", 603, true);
	init_name_in_spec("arrowdblright", 987, true);
	init_name_in_spec("arrowdbldown", 603, true);
	init_name_in_spec("lozenge", 494, true);
	init_name_in_spec("angleleft", 329, true);
	init_name_in_spec("registersans", 790, true);
	init_name_in_spec("copyrightsans", 790, true);
	init_name_in_spec("trademarksans", 786, true);
	init_name_in_spec("summation", 713, true);
	init_name_in_spec("parenlefttp", 384, true);
	init_name_in_spec("parenleftex", 384, true);
	init_name_in_spec("parenleftbt", 384, true);
	init_name_in_spec("bracketlefttp", 384, true);
	init_name_in_spec("bracketleftex", 384, true);
	init_name_in_spec("bracketleftbt", 384, true);
	init_name_in_spec("bracelefttp", 494, true);
	init_name_in_spec("braceleftmid", 494, true);
	init_name_in_spec("braceleftbt", 494, true);
	init_name_in_spec("braceex", 494, true);
	init_name_in_spec("angleright", 329, true);
	init_name_in_spec("integral", 274, true);
	init_name_in_spec("integraltp", 686, true);
	init_name_in_spec("integralex", 686, true);
	init_name_in_spec("integralbt", 686, true);
	init_name_in_spec("parenrighttp", 384, true);
	init_name_in_spec("parenrightex", 384, true);
	init_name_in_spec("parenrightbt", 384, true);
	init_name_in_spec("bracketrighttp", 384, true);
	init_name_in_spec("bracketrightex", 384, true);
	init_name_in_spec("bracketrightbt", 384, true);
	init_name_in_spec("bracerighttp", 494, true);
	init_name_in_spec("bracerightmid", 494, true);
	init_name_in_spec("bracerightbt", 494, true);
	init_name_in_spec("apple", 790, true);
	init_name_in_spec("space", 278, false);
	init_name_in_spec("a1", 974, false);
	init_name_in_spec("a2", 961, false);
	init_name_in_spec("a202", 974, false);
	init_name_in_spec("a3", 980, false);
	init_name_in_spec("a4", 719, false);
	init_name_in_spec("a5", 789, false);
	init_name_in_spec("a119", 790, false);
	init_name_in_spec("a118", 791, false);
	init_name_in_spec("a117", 690, false);
	init_name_in_spec("a11", 960, false);
	init_name_in_spec("a12", 939, false);
	init_name_in_spec("a13", 549, false);
	init_name_in_spec("a14", 855, false);
	init_name_in_spec("a15", 911, false);
	init_name_in_spec("a16", 933, false);
	init_name_in_spec("a105", 911, false);
	init_name_in_spec("a17", 945, false);
	init_name_in_spec("a18", 974, false);
	init_name_in_spec("a19", 755, false);
	init_name_in_spec("a20", 846, false);
	init_name_in_spec("a21", 762, false);
	init_name_in_spec("a22", 761, false);
	init_name_in_spec("a23", 571, false);
	init_name_in_spec("a24", 677, false);
	init_name_in_spec("a25", 763, false);
	init_name_in_spec("a26", 760, false);
	init_name_in_spec("a27", 759, false);
	init_name_in_spec("a28", 754, false);
	init_name_in_spec("a6", 494, false);
	init_name_in_spec("a7", 552, false);
	init_name_in_spec("a8", 537, false);
	init_name_in_spec("a9", 577, false);
	init_name_in_spec("a10", 692, false);
	init_name_in_spec("a29", 786, false);
	init_name_in_spec("a30", 788, false);
	init_name_in_spec("a31", 788, false);
	init_name_in_spec("a32", 790, false);
	init_name_in_spec("a33", 793, false);
	init_name_in_spec("a34", 794, false);
	init_name_in_spec("a35", 816, false);
	init_name_in_spec("a36", 823, false);
	init_name_in_spec("a37", 789, false);
	init_name_in_spec("a38", 841, false);
	init_name_in_spec("a39", 823, false);
	init_name_in_spec("a40", 833, false);
	init_name_in_spec("a41", 816, false);
	init_name_in_spec("a42", 831, false);
	init_name_in_spec("a43", 923, false);
	init_name_in_spec("a44", 744, false);
	init_name_in_spec("a45", 723, false);
	init_name_in_spec("a46", 749, false);
	init_name_in_spec("a47", 790, false);
	init_name_in_spec("a48", 792, false);
	init_name_in_spec("a49", 695, false);
	init_name_in_spec("a50", 776, false);
	init_name_in_spec("a51", 768, false);
	init_name_in_spec("a52", 792, false);
	init_name_in_spec("a53", 759, false);
	init_name_in_spec("a54", 707, false);
	init_name_in_spec("a55", 708, false);
	init_name_in_spec("a56", 682, false);
	init_name_in_spec("a57", 701, false);
	init_name_in_spec("a58", 826, false);
	init_name_in_spec("a59", 815, false);
	init_name_in_spec("a60", 789, false);
	init_name_in_spec("a61", 789, false);
	init_name_in_spec("a62", 707, false);
	init_name_in_spec("a63", 687, false);
	init_name_in_spec("a64", 696, false);
	init_name_in_spec("a65", 689, false);
	init_name_in_spec("a66", 786, false);
	init_name_in_spec("a67", 787, false);
	init_name_in_spec("a68", 713, false);
	init_name_in_spec("a69", 791, false);
	init_name_in_spec("a70", 785, false);
	init_name_in_spec("a71", 791, false);
	init_name_in_spec("a72", 873, false);
	init_name_in_spec("a73", 761, false);
	init_name_in_spec("a74", 762, false);
	init_name_in_spec("a203", 762, false);
	init_name_in_spec("a75", 759, false);
	init_name_in_spec("a204", 759, false);
	init_name_in_spec("a76", 892, false);
	init_name_in_spec("a77", 892, false);
	init_name_in_spec("a78", 788, false);
	init_name_in_spec("a79", 784, false);
	init_name_in_spec("a81", 438, false);
	init_name_in_spec("a82", 138, false);
	init_name_in_spec("a83", 277, false);
	init_name_in_spec("a84", 415, false);
	init_name_in_spec("a97", 392, false);
	init_name_in_spec("a98", 392, false);
	init_name_in_spec("a99", 668, false);
	init_name_in_spec("a100", 668, false);
	init_name_in_spec("a89", 390, false);
	init_name_in_spec("a90", 390, false);
	init_name_in_spec("a93", 317, false);
	init_name_in_spec("a94", 317, false);
	init_name_in_spec("a91", 276, false);
	init_name_in_spec("a92", 276, false);
	init_name_in_spec("a205", 509, false);
	init_name_in_spec("a85", 509, false);
	init_name_in_spec("a206", 410, false);
	init_name_in_spec("a86", 410, false);
	init_name_in_spec("a87", 234, false);
	init_name_in_spec("a88", 234, false);
	init_name_in_spec("a95", 334, false);
	init_name_in_spec("a96", 334, false);
	init_name_in_spec("a101", 732, false);
	init_name_in_spec("a102", 544, false);
	init_name_in_spec("a103", 544, false);
	init_name_in_spec("a104", 910, false);
	init_name_in_spec("a106", 667, false);
	init_name_in_spec("a107", 760, false);
	init_name_in_spec("a108", 760, false);
	init_name_in_spec("a112", 776, false);
	init_name_in_spec("a111", 595, false);
	init_name_in_spec("a110", 694, false);
	init_name_in_spec("a109", 626, false);
	init_name_in_spec("a120", 788, false);
	init_name_in_spec("a121", 788, false);
	init_name_in_spec("a122", 788, false);
	init_name_in_spec("a123", 788, false);
	init_name_in_spec("a124", 788, false);
	init_name_in_spec("a125", 788, false);
	init_name_in_spec("a126", 788, false);
	init_name_in_spec("a127", 788, false);
	init_name_in_spec("a128", 788, false);
	init_name_in_spec("a129", 788, false);
	init_name_in_spec("a130", 788, false);
	init_name_in_spec("a131", 788, false);
	init_name_in_spec("a132", 788, false);
	init_name_in_spec("a133", 788, false);
	init_name_in_spec("a134", 788, false);
	init_name_in_spec("a135", 788, false);
	init_name_in_spec("a136", 788, false);
	init_name_in_spec("a137", 788, false);
	init_name_in_spec("a138", 788, false);
	init_name_in_spec("a139", 788, false);
	init_name_in_spec("a140", 788, false);
	init_name_in_spec("a141", 788, false);
	init_name_in_spec("a142", 788, false);
	init_name_in_spec("a143", 788, false);
	init_name_in_spec("a144", 788, false);
	init_name_in_spec("a145", 788, false);
	init_name_in_spec("a146", 788, false);
	init_name_in_spec("a147", 788, false);
	init_name_in_spec("a148", 788, false);
	init_name_in_spec("a149", 788, false);
	init_name_in_spec("a150", 788, false);
	init_name_in_spec("a151", 788, false);
	init_name_in_spec("a152", 788, false);
	init_name_in_spec("a153", 788, false);
	init_name_in_spec("a154", 788, false);
	init_name_in_spec("a155", 788, false);
	init_name_in_spec("a156", 788, false);
	init_name_in_spec("a157", 788, false);
	init_name_in_spec("a158", 788, false);
	init_name_in_spec("a159", 788, false);
	init_name_in_spec("a160", 894, false);
	init_name_in_spec("a161", 838, false);
	init_name_in_spec("a163", 1016, false);
	init_name_in_spec("a164", 458, false);
	init_name_in_spec("a196", 748, false);
	init_name_in_spec("a165", 924, false);
	init_name_in_spec("a192", 748, false);
	init_name_in_spec("a166", 918, false);
	init_name_in_spec("a167", 927, false);
	init_name_in_spec("a168", 928, false);
	init_name_in_spec("a169", 928, false);
	init_name_in_spec("a170", 834, false);
	init_name_in_spec("a171", 873, false);
	init_name_in_spec("a172", 828, false);
	init_name_in_spec("a173", 924, false);
	init_name_in_spec("a162", 924, false);
	init_name_in_spec("a174", 917, false);
	init_name_in_spec("a175", 930, false);
	init_name_in_spec("a176", 931, false);
	init_name_in_spec("a177", 463, false);
	init_name_in_spec("a178", 883, false);
	init_name_in_spec("a179", 836, false);
	init_name_in_spec("a193", 836, false);
	init_name_in_spec("a180", 867, false);
	init_name_in_spec("a199", 867, false);
	init_name_in_spec("a181", 696, false);
	init_name_in_spec("a200", 696, false);
	init_name_in_spec("a182", 874, false);
	init_name_in_spec("a201", 874, false);
	init_name_in_spec("a183", 760, false);
	init_name_in_spec("a184", 946, false);
	init_name_in_spec("a197", 771, false);
	init_name_in_spec("a185", 865, false);
	init_name_in_spec("a194", 771, false);
	init_name_in_spec("a198", 888, false);
	init_name_in_spec("a186", 967, false);
	init_name_in_spec("a195", 888, false);
	init_name_in_spec("a187", 831, false);
	init_name_in_spec("a188", 873, false);
	init_name_in_spec("a189", 927, false);
	init_name_in_spec("a190", 970, false);
	init_name_in_spec("a191", 918, false);
}


StandardWidths::~StandardWidths()
{
}

float 
StandardWidths::WidthForName(const char *name, int8 font)
{
	// use the Courier fixed width as a default
	float w = .600;
	
	// look for the name information
	if (font == SYMBOL) {
		spec_width_map::iterator i = fSymbolWidths.find(name);
		if (i != fSymbolWidths.end())
			w = i->second * .001;
	}
	else if (font == ZAPF_DINGBATS) {
		spec_width_map::iterator i = fDingbatWidths.find(name);
		if (i != fDingbatWidths.end())
			w = i->second * .001;
	}
	else if (font >= HELVETICA && font < SYMBOL && name) {
		std_width_map::iterator i = fStdWidths.find(name);
		// if we find the name and we have a width for this name in this font
		// set it
		if (i != fStdWidths.end() && i->second.widths[font] != 0)
			w = i->second.widths[font] * .001;
	}
	return w;
}

void 
StandardWidths::init_name_in_widths(const char *name, width_info info)
{
	const char *atom = PDFObject::StaticAtom(name);
	fStdWidths.insert(std_width_map::value_type(atom, info));
}

void 
StandardWidths::init_name_in_spec(const char *name, uint16 width, bool useSymbolMap)
{
	const char *atom = PDFObject::StaticAtom(name);
	if (useSymbolMap)
		fSymbolWidths.insert(spec_width_map::value_type(atom, width));
	else
		fDingbatWidths.insert(spec_width_map::value_type(atom, width));
}

//#pragma mark -

PSNameToUnicodeMap::PSNameToUnicodeMap()
{
#define intern(number, x) init_name_in_codes(#x, number);							
	intern(0x0020, space);
	intern(0x0021, exclam);
	intern(0x0021, !);
	intern(0x0022, quotedbl);
	init_name_in_codes("\"", 0x0022);
	intern(0x0023, numbersign);
	intern(0x0023, #);
	intern(0x0024, dollar);
	intern(0x0024, $);
	intern(0x0025, percent);
	intern(0x0025, %);
	intern(0x0026, ampersand);
	intern(0x0026, &);
	intern(0x0027, quotesingle);
	init_name_in_codes("\'", 0x0027);
	intern(0x0028, parenleft);
	init_name_in_codes("(", 0x0028);
	intern(0x0029, parenright);
	init_name_in_codes(")", 0x0029);
	intern(0x002a, asterisk);
	intern(0x002a, *);
	intern(0x002b, plus);
	intern(0x002b, +);
	intern(0x002c, comma);
	init_name_in_codes(",", 0x002c);
	intern(0x002d, hyphen);
	intern(0x002d, -);
	intern(0x002e, period);
	intern(0x002e, .);
	intern(0x002f, slash);
	intern(0x002f, /);
	intern(0x0030, zero);
	intern(0x0030, 0);
	intern(0x0031, one);
	intern(0x0031, 1);
	intern(0x0032, two);
	intern(0x0032, 2);
	intern(0x0033, three);
	intern(0x0033, 3);
	intern(0x0034, four);
	intern(0x0034, 4);
	intern(0x0035, five);
	intern(0x0035, 5);
	intern(0x0036, six);
	intern(0x0036, 6);
	intern(0x0037, seven);
	intern(0x0037, 7);
	intern(0x0038, eight);
	intern(0x0038, 8);
	intern(0x0039, nine);
	intern(0x0039, 9);
	intern(0x003a, colon);
	intern(0x003a, :);
	intern(0x003b, semicolon);
	intern(0x003b, ;);
	intern(0x003c, less);
	intern(0x003c, <);
	intern(0x003d, equal);
	intern(0x003d, =);
	intern(0x003e, greater);
	intern(0x003e, >);
	intern(0x003f, question);
	intern(0x003f, ?);
	intern(0x0040, at);
	intern(0x0040, @);
	intern(0x0041, A);
	intern(0x0042, B);
	intern(0x0043, C);
	intern(0x0044, D);
	intern(0x0045, E);
	intern(0x0046, F);
	intern(0x0047, G);
	intern(0x0048, H);
	intern(0x0049, I);
	intern(0x004a, J);
	intern(0x004b, K);
	intern(0x004c, L);
	intern(0x004d, M);
	intern(0x004e, N);
	intern(0x004f, O);
	intern(0x0050, P);
	intern(0x0051, Q);
	intern(0x0052, R);
	intern(0x0053, S);
	intern(0x0054, T);
	intern(0x0055, U);
	intern(0x0056, V);
	intern(0x0057, W);
	intern(0x0058, X);
	intern(0x0059, Y);
	intern(0x005a, Z);
	intern(0x005b, bracketleft);
	intern(0x005b, [);
	intern(0x005c, backslash);
	init_name_in_codes("\\", 0x005c);
	intern(0x005d, bracketright);
	intern(0x005d, ]);
	intern(0x005e, asciicircum);
	intern(0x005f, underscore);
	intern(0x0060, grave);
	intern(0x0061, a);
	intern(0x0062, b);
	intern(0x0063, c);
	intern(0x0064, d);
	intern(0x0065, e);
	intern(0x0066, f);
	intern(0x0067, g);
	intern(0x0068, h);
	intern(0x0069, i);
	intern(0x006a, j);
	intern(0x006b, k);
	intern(0x006c, l);
	intern(0x006d, m);
	intern(0x006e, n);
	intern(0x006f, o);
	intern(0x0070, p);
	intern(0x0071, q);
	intern(0x0072, r);
	intern(0x0073, s);
	intern(0x0074, t);
	intern(0x0075, u);
	intern(0x0076, v);
	intern(0x0077, w);
	intern(0x0078, x);
	intern(0x0079, y);
	intern(0x007a, z);
	intern(0x007b, braceleft);
	intern(0x007b, {);
	intern(0x007c, bar);
	intern(0x007c, |);
	intern(0x007d, braceright);
	intern(0x007d, });
	intern(0x007e, asciitilde);
	intern(0x00a1, exclamdown);
	intern(0x00a2, cent);
	intern(0x00a3, sterling);
	intern(0x00a4, currency);
	intern(0x00a5, yen);
	intern(0x00a6, brokenbar);
	intern(0x00a7, section);
	intern(0x00a8, dieresis);
	intern(0x00a9, copyright);
	intern(0x00aa, ordfeminine);
	intern(0x00ab, guillemotleft);
	intern(0x00ac, logicalnot);
	intern(0x00ad, hyphen);
	intern(0x00ae, registered);
	intern(0x00af, macron);
	intern(0x00b0, degree);
	intern(0x00b1, plusminus);
	intern(0x00b2, twosuperior);
	intern(0x00b3, threesuperior);
	intern(0x00b4, acute);
	intern(0x00b5, mu);
	intern(0x00b6, paragraph);
	intern(0x00b7, periodcentered);
	intern(0x00b8, cedilla);
	intern(0x00b9, onesuperior);
	intern(0x00ba, ordmasculine);
	intern(0x00bb, guillemotright);
	intern(0x00bc, onequarter);
	intern(0x00bd, onehalf);
	intern(0x00be, threequarters);
	intern(0x00bf, questiondown);
	intern(0x00c0, Agrave);
	intern(0x00c1, Aacute);
	intern(0x00c2, Acircumflex);
	intern(0x00c3, Atilde);
	intern(0x00c4, Adieresis);
	intern(0x00c5, Aring);
	intern(0x00c6, AE);
	intern(0x00c7, Ccedilla);
	intern(0x00c8, Egrave);
	intern(0x00c9, Eacute);
	intern(0x00ca, Ecircumflex);
	intern(0x00cb, Edieresis);
	intern(0x00cc, Igrave);
	intern(0x00cd, Iacute);
	intern(0x00ce, Icircumflex);
	intern(0x00cf, Idieresis);
	intern(0x00d0, Eth);
	intern(0x00d1, Ntilde);
	intern(0x00d2, Ograve);
	intern(0x00d3, Oacute);
	intern(0x00d4, Ocircumflex);
	intern(0x00d5, Otilde);
	intern(0x00d6, Odieresis);
	intern(0x00d7, multiply);
	intern(0x00d8, Oslash);
	intern(0x00d9, Ugrave);
	intern(0x00da, Uacute);
	intern(0x00db, Ucircumflex);
	intern(0x00dc, Udieresis);
	intern(0x00dd, Yacute);
	intern(0x00de, Thorn);
	intern(0x00df, germandbls);
	intern(0x00e0, agrave);
	intern(0x00e1, aacute);
	intern(0x00e2, acircumflex);
	intern(0x00e3, atilde);
	intern(0x00e4, adieresis);
	intern(0x00e5, aring);
	intern(0x00e6, ae);
	intern(0x00e7, ccedilla);
	intern(0x00e8, egrave);
	intern(0x00e9, eacute);
	intern(0x00ea, ecircumflex);
	intern(0x00eb, edieresis);
	intern(0x00ec, igrave);
	intern(0x00ed, iacute);
	intern(0x00ee, icircumflex);
	intern(0x00ef, idieresis);
	intern(0x00f0, eth);
	intern(0x00f1, ntilde);
	intern(0x00f2, ograve);
	intern(0x00f3, oacute);
	intern(0x00f4, ocircumflex);
	intern(0x00f5, otilde);
	intern(0x00f6, odieresis);
	intern(0x00f7, divide);
	intern(0x00f8, oslash);
	intern(0x00f9, ugrave);
	intern(0x00fa, uacute);
	intern(0x00fb, ucircumflex);
	intern(0x00fc, udieresis);
	intern(0x00fd, yacute);
	intern(0x00fe, thorn);
	intern(0x00ff, ydieresis);
	intern(0x0100, Amacron);
	intern(0x0101, amacron);
	intern(0x0102, Abreve);
	intern(0x0103, abreve);
	intern(0x0104, Aogonek);
	intern(0x0105, aogonek);
	intern(0x0106, Cacute);
	intern(0x0107, cacute);
	intern(0x0108, Ccircumflex);
	intern(0x0109, ccircumflex);
	intern(0x010a, Cdotaccent);
	intern(0x010b, cdotaccent);
	intern(0x010c, Ccaron);
	intern(0x010d, ccaron);
	intern(0x010e, Dcaron);
	intern(0x010f, dcaron);
	intern(0x0110, Dcroat);
	intern(0x0111, dcroat);
	intern(0x0112, Emacron);
	intern(0x0113, emacron);
	intern(0x0114, Ebreve);
	intern(0x0115, ebreve);
	intern(0x0116, Edotaccent);
	intern(0x0117, edotaccent);
	intern(0x0118, Eogonek);
	intern(0x0119, eogonek);
	intern(0x011a, Ecaron);
	intern(0x011b, ecaron);
	intern(0x011c, Gcircumflex);
	intern(0x011d, gcircumflex);
	intern(0x011e, Gbreve);
	intern(0x011f, gbreve);
	intern(0x0120, Gdotaccent);
	intern(0x0121, gdotaccent);
	intern(0x0122, Gcommaaccent);
	intern(0x0123, gcommaaccent);
	intern(0x0124, Hcircumflex);
	intern(0x0125, hcircumflex);
	intern(0x0126, Hbar);
	intern(0x0127, hbar);
	intern(0x0128, Itilde);
	intern(0x0129, itilde);
	intern(0x012a, Imacron);
	intern(0x012b, imacron);
	intern(0x012c, Ibreve);
	intern(0x012d, ibreve);
	intern(0x012e, Iogonek);
	intern(0x012f, iogonek);
	intern(0x0130, Idotaccent);
	intern(0x0131, dotlessi);
	intern(0x0132, IJ);
	intern(0x0133, ij);
	intern(0x0134, Jcircumflex);
	intern(0x0135, jcircumflex);
	intern(0x0136, Kcommaaccent);
	intern(0x0137, kcommaaccent);
	intern(0x0138, kgreenlandic);
	intern(0x0139, Lacute);
	intern(0x013a, lacute);
	intern(0x013b, Lcommaaccent);
	intern(0x013c, lcommaaccent);
	intern(0x013d, Lcaron);
	intern(0x013e, lcaron);
	intern(0x013f, Ldot);
	intern(0x0140, ldot);
	intern(0x0141, Lslash);
	intern(0x0142, lslash);
	intern(0x0143, Nacute);
	intern(0x0144, nacute);
	intern(0x0145, Ncommaaccent);
	intern(0x0146, ncommaaccent);
	intern(0x0147, Ncaron);
	intern(0x0148, ncaron);
	intern(0x0149, napostrophe);
	intern(0x014a, Eng);
	intern(0x014b, eng);
	intern(0x014c, Omacron);
	intern(0x014d, omacron);
	intern(0x014e, Obreve);
	intern(0x014f, obreve);
	intern(0x0150, Ohungarumlaut);
	intern(0x0151, ohungarumlaut);
	intern(0x0152, OE);
	intern(0x0153, oe);
	intern(0x0154, Racute);
	intern(0x0155, racute);
	intern(0x0156, Rcommaaccent);
	intern(0x0157, rcommaaccent);
	intern(0x0158, Rcaron);
	intern(0x0159, rcaron);
	intern(0x015a, Sacute);
	intern(0x015b, sacute);
	intern(0x015c, Scircumflex);
	intern(0x015d, scircumflex);
	intern(0x015e, Scedilla);
	intern(0x015f, scedilla);
	intern(0x0160, Scaron);
	intern(0x0161, scaron);
	intern(0x0162, Tcommaaccent);
	intern(0x0163, tcommaaccent);
	intern(0x0164, Tcaron);
	intern(0x0165, tcaron);
	intern(0x0166, Tbar);
	intern(0x0167, tbar);
	intern(0x0168, Utilde);
	intern(0x0169, utilde);
	intern(0x016a, Umacron);
	intern(0x016b, umacron);
	intern(0x016c, Ubreve);
	intern(0x016d, ubreve);
	intern(0x016e, Uring);
	intern(0x016f, uring);
	intern(0x0170, Uhungarumlaut);
	intern(0x0171, uhungarumlaut);
	intern(0x0172, Uogonek);
	intern(0x0173, uogonek);
	intern(0x0174, Wcircumflex);
	intern(0x0175, wcircumflex);
	intern(0x0176, Ycircumflex);
	intern(0x0177, ycircumflex);
	intern(0x0178, Ydieresis);
	intern(0x0179, Zacute);
	intern(0x017a, zacute);
	intern(0x017b, Zdotaccent);
	intern(0x017c, zdotaccent);
	intern(0x017d, Zcaron);
	intern(0x017e, zcaron);
	intern(0x017f, longs);
	intern(0x0192, florin);
	intern(0x01a0, Ohorn);
	intern(0x01a1, ohorn);
	intern(0x01af, Uhorn);
	intern(0x01b0, uhorn);
	intern(0x01e6, Gcaron);
	intern(0x01e7, gcaron);
	intern(0x01fa, Aringacute);
	intern(0x01fb, aringacute);
	intern(0x01fc, AEacute);
	intern(0x01fd, aeacute);
	intern(0x01fe, Oslashacute);
	intern(0x01ff, oslashacute);
	intern(0x0218, Scommaaccent);
	intern(0x0219, scommaaccent);
	intern(0x021a, Tcommaaccent);
	intern(0x021b, tcommaaccent);
	intern(0x02bc, afii57929);
	intern(0x02bd, afii64937);
	intern(0x02c6, circumflex);
	intern(0x02c7, caron);
	intern(0x02c9, macron);
	intern(0x02d8, breve);
	intern(0x02d9, dotaccent);
	intern(0x02da, ring);
	intern(0x02db, ogonek);
	intern(0x02dc, tilde);
	intern(0x02dd, hungarumlaut);
	intern(0x0300, gravecomb);
	intern(0x0301, acutecomb);
	intern(0x0303, tildecomb);
	intern(0x0309, hookabovecomb);
	intern(0x0323, dotbelowcomb);
	intern(0x0384, tonos);
	intern(0x0385, dieresistonos);
	intern(0x0386, Alphatonos);
	intern(0x0387, anoteleia);
	intern(0x0388, Epsilontonos);
	intern(0x0389, Etatonos);
	intern(0x038a, Iotatonos);
	intern(0x038c, Omicrontonos);
	intern(0x038e, Upsilontonos);
	intern(0x038f, Omegatonos);
	intern(0x0390, iotadieresistonos);
	intern(0x0391, Alpha);
	intern(0x0392, Beta);
	intern(0x0393, Gamma);
	intern(0x0394, Delta);
	intern(0x0395, Epsilon);
	intern(0x0396, Zeta);
	intern(0x0397, Eta);
	intern(0x0398, Theta);
	intern(0x0399, Iota);
	intern(0x039a, Kappa);
	intern(0x039b, Lambda);
	intern(0x039c, Mu);
	intern(0x039d, Nu);
	intern(0x039e, Xi);
	intern(0x039f, Omicron);
	intern(0x03a0, Pi);
	intern(0x03a1, Rho);
	intern(0x03a3, Sigma);
	intern(0x03a4, Tau);
	intern(0x03a5, Upsilon);
	intern(0x03a6, Phi);
	intern(0x03a7, Chi);
	intern(0x03a8, Psi);
	intern(0x03a9, Omega);
	intern(0x03aa, Iotadieresis);
	intern(0x03ab, Upsilondieresis);
	intern(0x03ac, alphatonos);
	intern(0x03ad, epsilontonos);
	intern(0x03ae, etatonos);
	intern(0x03af, iotatonos);
	intern(0x03b0, upsilondieresistonos);
	intern(0x03b1, alpha);
	intern(0x03b2, beta);
	intern(0x03b3, gamma);
	intern(0x03b4, delta);
	intern(0x03b5, epsilon);
	intern(0x03b6, zeta);
	intern(0x03b7, eta);
	intern(0x03b8, theta);
	intern(0x03b9, iota);
	intern(0x03ba, kappa);
	intern(0x03bb, lambda);
	intern(0x03bc, mu);
	intern(0x03bd, nu);
	intern(0x03be, xi);
	intern(0x03bf, omicron);
	intern(0x03c0, pi);
	intern(0x03c1, rho);
	intern(0x03c2, sigma1);
	intern(0x03c3, sigma);
	intern(0x03c4, tau);
	intern(0x03c5, upsilon);
	intern(0x03c6, phi);
	intern(0x03c7, chi);
	intern(0x03c8, psi);
	intern(0x03c9, omega);
	intern(0x03ca, iotadieresis);
	intern(0x03cb, upsilondieresis);
	intern(0x03cc, omicrontonos);
	intern(0x03cd, upsilontonos);
	intern(0x03ce, omegatonos);
	intern(0x03d1, theta1);
	intern(0x03d2, Upsilon1);
	intern(0x03d5, phi1);
	intern(0x03d6, omega1);
	intern(0x0401, afii10023);
	intern(0x0402, afii10051);
	intern(0x0403, afii10052);
	intern(0x0404, afii10053);
	intern(0x0405, afii10054);
	intern(0x0406, afii10055);
	intern(0x0407, afii10056);
	intern(0x0408, afii10057);
	intern(0x0409, afii10058);
	intern(0x040a, afii10059);
	intern(0x040b, afii10060);
	intern(0x040c, afii10061);
	intern(0x040e, afii10062);
	intern(0x040f, afii10145);
	intern(0x0410, afii10017);
	intern(0x0411, afii10018);
	intern(0x0412, afii10019);
	intern(0x0413, afii10020);
	intern(0x0414, afii10021);
	intern(0x0415, afii10022);
	intern(0x0416, afii10024);
	intern(0x0417, afii10025);
	intern(0x0418, afii10026);
	intern(0x0419, afii10027);
	intern(0x041a, afii10028);
	intern(0x041b, afii10029);
	intern(0x041c, afii10030);
	intern(0x041d, afii10031);
	intern(0x041e, afii10032);
	intern(0x041f, afii10033);
	intern(0x0420, afii10034);
	intern(0x0421, afii10035);
	intern(0x0422, afii10036);
	intern(0x0423, afii10037);
	intern(0x0424, afii10038);
	intern(0x0425, afii10039);
	intern(0x0426, afii10040);
	intern(0x0427, afii10041);
	intern(0x0428, afii10042);
	intern(0x0429, afii10043);
	intern(0x042a, afii10044);
	intern(0x042b, afii10045);
	intern(0x042c, afii10046);
	intern(0x042d, afii10047);
	intern(0x042e, afii10048);
	intern(0x042f, afii10049);
	intern(0x0430, afii10065);
	intern(0x0431, afii10066);
	intern(0x0432, afii10067);
	intern(0x0433, afii10068);
	intern(0x0434, afii10069);
	intern(0x0435, afii10070);
	intern(0x0436, afii10072);
	intern(0x0437, afii10073);
	intern(0x0438, afii10074);
	intern(0x0439, afii10075);
	intern(0x043a, afii10076);
	intern(0x043b, afii10077);
	intern(0x043c, afii10078);
	intern(0x043d, afii10079);
	intern(0x043e, afii10080);
	intern(0x043f, afii10081);
	intern(0x0440, afii10082);
	intern(0x0441, afii10083);
	intern(0x0442, afii10084);
	intern(0x0443, afii10085);
	intern(0x0444, afii10086);
	intern(0x0445, afii10087);
	intern(0x0446, afii10088);
	intern(0x0447, afii10089);
	intern(0x0448, afii10090);
	intern(0x0449, afii10091);
	intern(0x044a, afii10092);
	intern(0x044b, afii10093);
	intern(0x044c, afii10094);
	intern(0x044d, afii10095);
	intern(0x044e, afii10096);
	intern(0x044f, afii10097);
	intern(0x0451, afii10071);
	intern(0x0452, afii10099);
	intern(0x0453, afii10100);
	intern(0x0454, afii10101);
	intern(0x0455, afii10102);
	intern(0x0456, afii10103);
	intern(0x0457, afii10104);
	intern(0x0458, afii10105);
	intern(0x0459, afii10106);
	intern(0x045a, afii10107);
	intern(0x045b, afii10108);
	intern(0x045c, afii10109);
	intern(0x045e, afii10110);
	intern(0x045f, afii10193);
	intern(0x0462, afii10146);
	intern(0x0463, afii10194);
	intern(0x0472, afii10147);
	intern(0x0473, afii10195);
	intern(0x0474, afii10148);
	intern(0x0475, afii10196);
	intern(0x0490, afii10050);
	intern(0x0491, afii10098);
	intern(0x04d9, afii10846);
	intern(0x05b0, afii57799);
	intern(0x05b1, afii57801);
	intern(0x05b2, afii57800);
	intern(0x05b3, afii57802);
	intern(0x05b4, afii57793);
	intern(0x05b5, afii57794);
	intern(0x05b6, afii57795);
	intern(0x05b7, afii57798);
	intern(0x05b8, afii57797);
	intern(0x05b9, afii57806);
	intern(0x05bb, afii57796);
	intern(0x05bc, afii57807);
	intern(0x05bd, afii57839);
	intern(0x05be, afii57645);
	intern(0x05bf, afii57841);
	intern(0x05c0, afii57842);
	intern(0x05c1, afii57804);
	intern(0x05c2, afii57803);
	intern(0x05c3, afii57658);
	intern(0x05d0, afii57664);
	intern(0x05d1, afii57665);
	intern(0x05d2, afii57666);
	intern(0x05d3, afii57667);
	intern(0x05d4, afii57668);
	intern(0x05d5, afii57669);
	intern(0x05d6, afii57670);
	intern(0x05d7, afii57671);
	intern(0x05d8, afii57672);
	intern(0x05d9, afii57673);
	intern(0x05da, afii57674);
	intern(0x05db, afii57675);
	intern(0x05dc, afii57676);
	intern(0x05dd, afii57677);
	intern(0x05de, afii57678);
	intern(0x05df, afii57679);
	intern(0x05e0, afii57680);
	intern(0x05e1, afii57681);
	intern(0x05e2, afii57682);
	intern(0x05e3, afii57683);
	intern(0x05e4, afii57684);
	intern(0x05e5, afii57685);
	intern(0x05e6, afii57686);
	intern(0x05e7, afii57687);
	intern(0x05e8, afii57688);
	intern(0x05e9, afii57689);
	intern(0x05ea, afii57690);
	intern(0x05f0, afii57716);
	intern(0x05f1, afii57717);
	intern(0x05f2, afii57718);
	intern(0x060c, afii57388);
	intern(0x061b, afii57403);
	intern(0x061f, afii57407);
	intern(0x0621, afii57409);
	intern(0x0622, afii57410);
	intern(0x0623, afii57411);
	intern(0x0624, afii57412);
	intern(0x0625, afii57413);
	intern(0x0626, afii57414);
	intern(0x0627, afii57415);
	intern(0x0628, afii57416);
	intern(0x0629, afii57417);
	intern(0x062a, afii57418);
	intern(0x062b, afii57419);
	intern(0x062c, afii57420);
	intern(0x062d, afii57421);
	intern(0x062e, afii57422);
	intern(0x062f, afii57423);
	intern(0x0630, afii57424);
	intern(0x0631, afii57425);
	intern(0x0632, afii57426);
	intern(0x0633, afii57427);
	intern(0x0634, afii57428);
	intern(0x0635, afii57429);
	intern(0x0636, afii57430);
	intern(0x0637, afii57431);
	intern(0x0638, afii57432);
	intern(0x0639, afii57433);
	intern(0x063a, afii57434);
	intern(0x0640, afii57440);
	intern(0x0641, afii57441);
	intern(0x0642, afii57442);
	intern(0x0643, afii57443);
	intern(0x0644, afii57444);
	intern(0x0645, afii57445);
	intern(0x0646, afii57446);
	intern(0x0647, afii57470);
	intern(0x0648, afii57448);
	intern(0x0649, afii57449);
	intern(0x064a, afii57450);
	intern(0x064b, afii57451);
	intern(0x064c, afii57452);
	intern(0x064d, afii57453);
	intern(0x064e, afii57454);
	intern(0x064f, afii57455);
	intern(0x0650, afii57456);
	intern(0x0651, afii57457);
	intern(0x0652, afii57458);
	intern(0x0660, afii57392);
	intern(0x0661, afii57393);
	intern(0x0662, afii57394);
	intern(0x0663, afii57395);
	intern(0x0664, afii57396);
	intern(0x0665, afii57397);
	intern(0x0666, afii57398);
	intern(0x0667, afii57399);
	intern(0x0668, afii57400);
	intern(0x0669, afii57401);
	intern(0x066a, afii57381);
	intern(0x066d, afii63167);
	intern(0x0679, afii57511);
	intern(0x067e, afii57506);
	intern(0x0686, afii57507);
	intern(0x0688, afii57512);
	intern(0x0691, afii57513);
	intern(0x0698, afii57508);
	intern(0x06a4, afii57505);
	intern(0x06af, afii57509);
	intern(0x06ba, afii57514);
	intern(0x06d2, afii57519);
	intern(0x06d5, afii57534);
	intern(0x1e80, Wgrave);
	intern(0x1e81, wgrave);
	intern(0x1e82, Wacute);
	intern(0x1e83, wacute);
	intern(0x1e84, Wdieresis);
	intern(0x1e85, wdieresis);
	intern(0x1ef2, Ygrave);
	intern(0x1ef3, ygrave);
	intern(0x200c, afii61664);
	intern(0x200d, afii301);
	intern(0x200e, afii299);
	intern(0x200f, afii300);
	intern(0x2012, figuredash);
	intern(0x2013, endash);
	intern(0x2014, emdash);
	intern(0x2015, afii00208);
	intern(0x2017, underscoredbl);
	intern(0x2018, quoteleft);
	intern(0x2019, quoteright);
	intern(0x201a, quotesinglbase);
	intern(0x201b, quotereversed);
	intern(0x201c, quotedblleft);
	intern(0x201d, quotedblright);
	intern(0x201e, quotedblbase);
	intern(0x2020, dagger);
	intern(0x2021, daggerdbl);
	intern(0x2022, bullet);
	intern(0x2024, onedotenleader);
	intern(0x2025, twodotenleader);
	intern(0x2026, ellipsis);
	intern(0x202c, afii61573);
	intern(0x202d, afii61574);
	intern(0x202e, afii61575);
	intern(0x2030, perthousand);
	intern(0x2032, minute);
	intern(0x2033, second);
	intern(0x2039, guilsinglleft);
	intern(0x203a, guilsinglright);
	intern(0x203c, exclamdbl);
	intern(0x2044, fraction);
	intern(0x2070, zerosuperior);
	intern(0x2074, foursuperior);
	intern(0x2075, fivesuperior);
	intern(0x2076, sixsuperior);
	intern(0x2077, sevensuperior);
	intern(0x2078, eightsuperior);
	intern(0x2079, ninesuperior);
	intern(0x207d, parenleftsuperior);
	intern(0x207e, parenrightsuperior);
	intern(0x207f, nsuperior);
	intern(0x2080, zeroinferior);
	intern(0x2081, oneinferior);
	intern(0x2082, twoinferior);
	intern(0x2083, threeinferior);
	intern(0x2084, fourinferior);
	intern(0x2085, fiveinferior);
	intern(0x2086, sixinferior);
	intern(0x2087, seveninferior);
	intern(0x2088, eightinferior);
	intern(0x2089, nineinferior);
	intern(0x208d, parenleftinferior);
	intern(0x208e, parenrightinferior);
	intern(0x20a1, colonmonetary);
	intern(0x20a3, franc);
	intern(0x20a4, lira);
	intern(0x20a7, peseta);
	intern(0x20aa, afii57636);
	intern(0x20ab, dong);
	intern(0x20ac, Euro);
	intern(0x2105, afii61248);
	intern(0x2111, Ifraktur);
	intern(0x2113, afii61289);
	intern(0x2116, afii61352);
	intern(0x2118, weierstrass);
	intern(0x211c, Rfraktur);
	intern(0x211e, prescription);
	intern(0x2122, trademark);
	intern(0x2126, Omega);
	intern(0x212e, estimated);
	intern(0x2135, aleph);
	intern(0x2153, onethird);
	intern(0x2154, twothirds);
	intern(0x215b, oneeighth);
	intern(0x215c, threeeighths);
	intern(0x215d, fiveeighths);
	intern(0x215e, seveneighths);
	intern(0x2190, arrowleft);
	intern(0x2191, arrowup);
	intern(0x2192, arrowright);
	intern(0x2193, arrowdown);
	intern(0x2194, arrowboth);
	intern(0x2195, arrowupdn);
	intern(0x21a8, arrowupdnbse);
	intern(0x21b5, carriagereturn);
	intern(0x21d0, arrowdblleft);
	intern(0x21d1, arrowdblup);
	intern(0x21d2, arrowdblright);
	intern(0x21d3, arrowdbldown);
	intern(0x21d4, arrowdblboth);
	intern(0x2200, universal);
	intern(0x2202, partialdiff);
	intern(0x2203, existential);
	intern(0x2205, emptyset);
	intern(0x2206, Delta);
	intern(0x2207, gradient);
	intern(0x2208, element);
	intern(0x2209, notelement);
	intern(0x220b, suchthat);
	intern(0x220f, product);
	intern(0x2211, summation);
	intern(0x2212, minus);
	intern(0x2215, fraction);
	intern(0x2217, asteriskmath);
	intern(0x2219, periodcentered);
	intern(0x221a, radical);
	intern(0x221d, proportional);
	intern(0x221e, infinity);
	intern(0x221f, orthogonal);
	intern(0x2220, angle);
	intern(0x2227, logicaland);
	intern(0x2228, logicalor);
	intern(0x2229, intersection);
	intern(0x222a, union);
	intern(0x222b, integral);
	intern(0x2234, therefore);
	intern(0x223c, similar);
	intern(0x2245, congruent);
	intern(0x2248, approxequal);
	intern(0x2260, notequal);
	intern(0x2261, equivalence);
	intern(0x2264, lessequal);
	intern(0x2265, greaterequal);
	intern(0x2282, propersubset);
	intern(0x2283, propersuperset);
	intern(0x2284, notsubset);
	intern(0x2286, reflexsubset);
	intern(0x2287, reflexsuperset);
	intern(0x2295, circleplus);
	intern(0x2297, circlemultiply);
	intern(0x22a5, perpendicular);
	intern(0x22c5, dotmath);
	intern(0x2302, house);
	intern(0x2310, revlogicalnot);
	intern(0x2320, integraltp);
	intern(0x2321, integralbt);
	intern(0x2329, angleleft);
	intern(0x232a, angleright);
	intern(0x2500, SF100000);
	intern(0x2502, SF110000);
	intern(0x250c, SF010000);
	intern(0x2510, SF030000);
	intern(0x2514, SF020000);
	intern(0x2518, SF040000);
	intern(0x251c, SF080000);
	intern(0x2524, SF090000);
	intern(0x252c, SF060000);
	intern(0x2534, SF070000);
	intern(0x253c, SF050000);
	intern(0x2550, SF430000);
	intern(0x2551, SF240000);
	intern(0x2552, SF510000);
	intern(0x2553, SF520000);
	intern(0x2554, SF390000);
	intern(0x2555, SF220000);
	intern(0x2556, SF210000);
	intern(0x2557, SF250000);
	intern(0x2558, SF500000);
	intern(0x2559, SF490000);
	intern(0x255a, SF380000);
	intern(0x255b, SF280000);
	intern(0x255c, SF270000);
	intern(0x255d, SF260000);
	intern(0x255e, SF360000);
	intern(0x255f, SF370000);
	intern(0x2560, SF420000);
	intern(0x2561, SF190000);
	intern(0x2562, SF200000);
	intern(0x2563, SF230000);
	intern(0x2564, SF470000);
	intern(0x2565, SF480000);
	intern(0x2566, SF410000);
	intern(0x2567, SF450000);
	intern(0x2568, SF460000);
	intern(0x2569, SF400000);
	intern(0x256a, SF540000);
	intern(0x256b, SF530000);
	intern(0x256c, SF440000);
	intern(0x2580, upblock);
	intern(0x2584, dnblock);
	intern(0x2588, block);
	intern(0x258c, lfblock);
	intern(0x2590, rtblock);
	intern(0x2591, ltshade);
	intern(0x2592, shade);
	intern(0x2593, dkshade);
	intern(0x25a0, filledbox);
	intern(0x25a1, H22073);
	intern(0x25aa, H18543);
	intern(0x25ab, H18551);
	intern(0x25ac, filledrect);
	intern(0x25b2, triagup);
	intern(0x25ba, triagrt);
	intern(0x25bc, triagdn);
	intern(0x25c4, triaglf);
	intern(0x25ca, lozenge);
	intern(0x25cb, circle);
	intern(0x25cf, H18533);
	intern(0x25d8, invbullet);
	intern(0x25d9, invcircle);
	intern(0x25e6, openbullet);
	intern(0x263a, smileface);
	intern(0x263b, invsmileface);
	intern(0x263c, sun);
	intern(0x2640, female);
	intern(0x2642, male);
	intern(0x2660, spade);
	intern(0x2663, club);
	intern(0x2665, heart);
	intern(0x2666, diamond);
	intern(0x266a, musicalnote);
	intern(0x266b, musicalnotedbl);
	intern(0xf6be, dotlessj);
	intern(0xf6bf, LL);
	intern(0xf6c0, ll);
	intern(0xf6c1, Scedilla);
	intern(0xf6c2, scedilla);
	intern(0xf6c3, commaaccent);
	intern(0xf6c4, afii10063);
	intern(0xf6c5, afii10064);
	intern(0xf6c6, afii10192);
	intern(0xf6c7, afii10831);
	intern(0xf6c8, afii10832);
	intern(0xf6c9, Acute);
	intern(0xf6ca, Caron);
	intern(0xf6cb, Dieresis);
	intern(0xf6cc, DieresisAcute);
	intern(0xf6cd, DieresisGrave);
	intern(0xf6ce, Grave);
	intern(0xf6cf, Hungarumlaut);
	intern(0xf6d0, Macron);
	intern(0xf6d1, cyrBreve);
	intern(0xf6d2, cyrFlex);
	intern(0xf6d3, dblGrave);
	intern(0xf6d4, cyrbreve);
	intern(0xf6d5, cyrflex);
	intern(0xf6d6, dblgrave);
	intern(0xf6d7, dieresisacute);
	intern(0xf6d8, dieresisgrave);
	intern(0xf6d9, copyrightserif);
	intern(0xf6da, registerserif);
	intern(0xf6db, trademarkserif);
	intern(0xf6dc, onefitted);
	intern(0xf6dd, rupiah);
	intern(0xf6de, threequartersemdash);
	intern(0xf6df, centinferior);
	intern(0xf6e0, centsuperior);
	intern(0xf6e1, commainferior);
	intern(0xf6e2, commasuperior);
	intern(0xf6e3, dollarinferior);
	intern(0xf6e4, dollarsuperior);
	intern(0xf6e5, hypheninferior);
	intern(0xf6e6, hyphensuperior);
	intern(0xf6e7, periodinferior);
	intern(0xf6e8, periodsuperior);
	intern(0xf6e9, asuperior);
	intern(0xf6ea, bsuperior);
	intern(0xf6eb, dsuperior);
	intern(0xf6ec, esuperior);
	intern(0xf6ed, isuperior);
	intern(0xf6ee, lsuperior);
	intern(0xf6ef, msuperior);
	intern(0xf6f0, osuperior);
	intern(0xf6f1, rsuperior);
	intern(0xf6f2, ssuperior);
	intern(0xf6f3, tsuperior);
	intern(0xf6f4, Brevesmall);
	intern(0xf6f5, Caronsmall);
	intern(0xf6f6, Circumflexsmall);
	intern(0xf6f7, Dotaccentsmall);
	intern(0xf6f8, Hungarumlautsmall);
	intern(0xf6f9, Lslashsmall);
	intern(0xf6fa, OEsmall);
	intern(0xf6fb, Ogoneksmall);
	intern(0xf6fc, Ringsmall);
	intern(0xf6fd, Scaronsmall);
	intern(0xf6fe, Tildesmall);
	intern(0xf6ff, Zcaronsmall);
	intern(0xf721, exclamsmall);
	intern(0xf724, dollaroldstyle);
	intern(0xf726, ampersandsmall);
	intern(0xf730, zerooldstyle);
	intern(0xf731, oneoldstyle);
	intern(0xf732, twooldstyle);
	intern(0xf733, threeoldstyle);
	intern(0xf734, fouroldstyle);
	intern(0xf735, fiveoldstyle);
	intern(0xf736, sixoldstyle);
	intern(0xf737, sevenoldstyle);
	intern(0xf738, eightoldstyle);
	intern(0xf739, nineoldstyle);
	intern(0xf73f, questionsmall);
	intern(0xf760, Gravesmall);
	intern(0xf761, Asmall);
	intern(0xf762, Bsmall);
	intern(0xf763, Csmall);
	intern(0xf764, Dsmall);
	intern(0xf765, Esmall);
	intern(0xf766, Fsmall);
	intern(0xf767, Gsmall);
	intern(0xf768, Hsmall);
	intern(0xf769, Ismall);
	intern(0xf76a, Jsmall);
	intern(0xf76b, Ksmall);
	intern(0xf76c, Lsmall);
	intern(0xf76d, Msmall);
	intern(0xf76e, Nsmall);
	intern(0xf76f, Osmall);
	intern(0xf770, Psmall);
	intern(0xf771, Qsmall);
	intern(0xf772, Rsmall);
	intern(0xf773, Ssmall);
	intern(0xf774, Tsmall);
	intern(0xf775, Usmall);
	intern(0xf776, Vsmall);
	intern(0xf777, Wsmall);
	intern(0xf778, Xsmall);
	intern(0xf779, Ysmall);
	intern(0xf77a, Zsmall);
	intern(0xf7a1, exclamdownsmall);
	intern(0xf7a2, centoldstyle);
	intern(0xf7a8, Dieresissmall);
	intern(0xf7af, Macronsmall);
	intern(0xf7b4, Acutesmall);
	intern(0xf7b8, Cedillasmall);
	intern(0xf7bf, questiondownsmall);
	intern(0xf7e0, Agravesmall);
	intern(0xf7e1, Aacutesmall);
	intern(0xf7e2, Acircumflexsmall);
	intern(0xf7e3, Atildesmall);
	intern(0xf7e4, Adieresissmall);
	intern(0xf7e5, Aringsmall);
	intern(0xf7e6, AEsmall);
	intern(0xf7e7, Ccedillasmall);
	intern(0xf7e8, Egravesmall);
	intern(0xf7e9, Eacutesmall);
	intern(0xf7ea, Ecircumflexsmall);
	intern(0xf7eb, Edieresissmall);
	intern(0xf7ec, Igravesmall);
	intern(0xf7ed, Iacutesmall);
	intern(0xf7ee, Icircumflexsmall);
	intern(0xf7ef, Idieresissmall);
	intern(0xf7f0, Ethsmall);
	intern(0xf7f1, Ntildesmall);
	intern(0xf7f2, Ogravesmall);
	intern(0xf7f3, Oacutesmall);
	intern(0xf7f4, Ocircumflexsmall);
	intern(0xf7f5, Otildesmall);
	intern(0xf7f6, Odieresissmall);
	intern(0xf7f8, Oslashsmall);
	intern(0xf7f9, Ugravesmall);
	intern(0xf7fa, Uacutesmall);
	intern(0xf7fb, Ucircumflexsmall);
	intern(0xf7fc, Udieresissmall);
	intern(0xf7fd, Yacutesmall);
	intern(0xf7fe, Thornsmall);
	intern(0xf7ff, Ydieresissmall);
	intern(0xf8e5, radicalex);
	intern(0xf8e6, arrowvertex);
	intern(0xf8e7, arrowhorizex);
	intern(0xf8e8, registersans);
	intern(0xf8e9, copyrightsans);
	intern(0xf8ea, trademarksans);
	intern(0xf8eb, parenlefttp);
	intern(0xf8ec, parenleftex);
	intern(0xf8ed, parenleftbt);
	intern(0xf8ee, bracketlefttp);
	intern(0xf8ef, bracketleftex);
	intern(0xf8f0, bracketleftbt);
	intern(0xf8f1, bracelefttp);
	intern(0xf8f2, braceleftmid);
	intern(0xf8f3, braceleftbt);
	intern(0xf8f4, braceex);
	intern(0xf8f5, integralex);
	intern(0xf8f6, parenrighttp);
	intern(0xf8f7, parenrightex);
	intern(0xf8f8, parenrightbt);
	intern(0xf8f9, bracketrighttp);
	intern(0xf8fa, bracketrightex);
	intern(0xf8fb, bracketrightbt);
	intern(0xf8fc, bracerighttp);
	intern(0xf8fd, bracerightmid);
	intern(0xf8fe, bracerightbt);
	intern(0xfb00, ff);
	intern(0xfb01, fi);
	intern(0xfb02, fl);
	intern(0xfb03, ffi);
	intern(0xfb04, ffl);
	intern(0xfb1f, afii57705);
	intern(0xfb2a, afii57694);
	intern(0xfb2b, afii57695);
	intern(0xfb35, afii57723);
	intern(0xfb4b, afii57700);
#undef intern(number, x)
}


PSNameToUnicodeMap::~PSNameToUnicodeMap()
{
}


uint16
PSNameToUnicodeMap::UnicodeFor(const char *name)
{
	uint16 unicode = 0xffff;
	unicode_map::iterator i = fCodes.find(name);
	if (i != fCodes.end())
		unicode = i->second;
	return unicode;
}

void 
PSNameToUnicodeMap::init_name_in_codes(const char *name, uint16 unicode)
{
	const char * atom = PDFObject::StaticAtom(name);
	unicode_map::iterator i = fCodes.find(atom);
	if (i == fCodes.end())
		fCodes.insert(unicode_map::value_type(atom, unicode));
}

