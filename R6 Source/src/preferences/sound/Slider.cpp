//--------------------------------------------------------------------
//	
//	Slider.cpp
//
//	Written by: Robert Polic
//  Revised: 27-Jun-96 marc
//	
//	Copyright 1995, 1996 Be, Inc. All Rights Reserved.
//	
//--------------------------------------------------------------------

#include "Slider.h"
#include <stdio.h>

extern char back_bits[];
extern char thumb_bits[];

const float TSliderView::fMin = 0.0;
const float TSliderView::fMax = 1.0;

const int TSliderView::fBackWidth = BACK_WIDTH;
const int TSliderView::fBackHeight = BACK_HEIGHT;
const int TSliderView::fThumbWidth = THUMB_WIDTH;
const int TSliderView::fThumbHeight = THUMB_HEIGHT;
const BRect TSliderView::fBackRect (0, 0, BACK_WIDTH, BACK_HEIGHT);
const BRect TSliderView::fThumbRect (0, 0, THUMB_WIDTH, THUMB_HEIGHT);

inline float
TSliderView::ThumbTop ()
{
  return fBackHeight - 2 - 100*fValue - fThumbHeight;
}

TSliderView::TSliderView (BPoint where, Half half, char* name, float value,
						  BHandler* target, int32 ID)
  : BView (BRect (where, where + BPoint (fBackWidth, fBackHeight)), name,
		   B_FOLLOW_LEFT | B_FOLLOW_TOP,
		   B_WILL_DRAW | B_NAVIGABLE
		   | (half == RIGHT_HALF ? 0 : B_NAVIGABLE_JUMP)),
	fPartner (NULL), fValue (value), fTarget (target), fID (ID), fHalf (half)
{
  fSliderBack = new BBitmap (fBackRect, B_COLOR_8_BIT);
  fSliderBack->SetBits (back_bits, fSliderBack->BitsLength(), 0, B_COLOR_8_BIT);

  fThumb = new BBitmap (fThumbRect, B_COLOR_8_BIT, TRUE);
  fThumb->SetBits (thumb_bits, fThumb->BitsLength(), 0, B_COLOR_8_BIT);

  fOffScreen = new BBitmap (fBackRect, B_COLOR_8_BIT, TRUE);
  fOffView = new BView (fBackRect, "slider", B_FOLLOW_ALL, B_WILL_DRAW);
  fOffScreen->Lock ();
  fOffScreen->AddChild (fOffView);
  fOffScreen->Unlock ();

  fXOffset = 0;
  if (fHalf == LEFT_HALF)
	ResizeBy (-2 - fBackWidth / 2, 0);
  else if (fHalf == RIGHT_HALF) {
	fXOffset = 1 - fBackWidth / 2;
	ResizeBy (fXOffset, 0);
	MoveBy (-fXOffset, 0);
  }	
}

TSliderView::~TSliderView ()
{
  delete fSliderBack;
  delete fThumb;
  delete fOffScreen;	/* magically deletes fOffView! */
}

void
TSliderView::KeyDown(const char* bytes, int32 numBytes)
{
	int32 mod;

	if (Window()->CurrentMessage()->FindInt32("modifiers", &mod) == B_NO_ERROR)
	  if (numBytes == 1)
		if (bytes[0] == B_UP_ARROW) {
			SetValue(fValue + 0.05);
			if (mod & B_OPTION_KEY)
				if (fPartner)
					fPartner->SetValue (fValue);
		}
		else if (bytes[0] == B_DOWN_ARROW) {
			SetValue(fValue - 0.05);
			if (mod & B_OPTION_KEY)
				if (fPartner)
					fPartner->SetValue (fValue);
		}

	BView::KeyDown(bytes, numBytes);
}

void
TSliderView::MakeFocus(bool state)
{
	if (state == IsFocus())
		return;

	BView::MakeFocus(state);

	if (Window())
		Draw (BRect());
}

void
TSliderView::Draw (BRect)
{
  BPoint thumb ((fBackWidth - fThumbWidth) / 2, ThumbTop ());
  fOffScreen->Lock();
  fOffView->DrawBitmap(fSliderBack, BPoint(0, 0));
  fOffView->DrawBitmap(fThumb, thumb);
  if (IsFocus()) {
	BRect highlight (fThumbRect);
	highlight.OffsetTo(thumb);
	highlight.InsetBy(-2, -2);
  	fOffView->StrokeRect(highlight);
  }
  fOffView->Sync();
  DrawBitmap(fOffScreen, BPoint(fXOffset, 0));
  fOffScreen->Unlock();
}

void
TSliderView::AttachedToWindow ()
{
  SetViewColor (B_TRANSPARENT_32_BIT);
}

float
TSliderView::Value ()
{
  return (fValue);
}

void
TSliderView::SetValue (float value, bool sync)
{
  if (value < fMin)
	value = fMin;
  if (value > fMax)
	value = fMax;

  if (value != fValue) {
	BMessage mes (fID);
	fValue = value;
	mes.AddFloat("value", value);
	fTarget->MessageReceived (&mes);
	if (sync && fPartner)
	  fPartner->SetValue (value, sync);
	Draw (BRect());
  }
}

void
TSliderView::MouseDown (BPoint click)
{
  BPoint where;
  uint32 buttons;
  GetMouse (&where, &buttons);
  uint32 sync = (buttons & B_PRIMARY_MOUSE_BUTTON);

  BRect rect = fThumbRect;
  rect.OffsetBy (fXOffset + 6, ThumbTop ());
  if (!rect.Contains (click))
	SetValue ((fBackHeight - 13 - click.y) / 100.0, sync);
  else
	SetValue (fValue, sync);

  float old_value = fValue;
  while (buttons) {
	GetMouse (&where, &buttons);
	SetValue (old_value + (click.y - where.y) / 100.0, sync);
	snooze (15000);
  }
}

void
TSliderView::DrawLabel (char* label)
{
  BView* parent = Parent ();
  parent->SetDrawingMode (B_OP_OVER);
  parent->SetHighColor (0, 0, 0);
  parent->SetFont (be_bold_font);
  parent->SetFontSize (12);
  if (label) {
	BRect frame = Frame ();
	float w = (fBackWidth - parent->StringWidth (label)) / 2.0;
	parent->MovePenTo (frame.left + w, frame.top - 7);
	parent->DrawString (label);
  }
}

void
TSliderView::Split ()
{
  const uchar split_color = 50;
  fThumb->Lock ();
  BView* v = new BView (fThumb->Bounds(), NULL, B_FOLLOW_ALL, 0);
  fThumb->AddChild (v);
  v->SetHighColor (split_color, split_color, split_color);
  v->MovePenTo (fThumbWidth / 2, 0);
  v->StrokeLine (BPoint (fThumbWidth / 2, fThumbHeight - 2));
  v->RemoveSelf();
  delete v;
  fThumb->Unlock ();
}


TMonoSlider::TMonoSlider (BPoint where, char* label, float value,
						  BView* view, int32 ID, int32 muteID, bool mute)
{
  fMuteBox = NULL;
  fLabel = label;
  fSliderView = new TSliderView (where, BOTH_HALVES, label, value, view, ID);
  view->AddChild (fSliderView);

  if (muteID != -1) {
	BRect box (0, 0, 46, 16);
	box.OffsetBy (where + BPoint (-9, fSliderView->fBackHeight + 10));
	fMuteBox = new BCheckBox (box, label, "Mute", new BMessage (muteID));
	fMuteBox->SetValue (mute);
	fMuteBox->SetTarget (view);
	view->AddChild (fMuteBox);
  }
}

TMonoSlider::~TMonoSlider ()
{
  delete fSliderView;
  if (fMuteBox)
	delete fMuteBox;
}

void
TMonoSlider::SetValue (float value)
{
  fSliderView->SetValue (value);
}

void
TMonoSlider::SetMute (bool mute)
{
  fMuteBox->SetValue (mute);
}

void
TMonoSlider::DrawLabel ()
{
  fSliderView->DrawLabel (fLabel);
}

TStereoSlider::TStereoSlider (BPoint where, char* label, float l_value,
							  float r_value, BView* view, int32 l_ID, int32 r_ID,
							  int32 muteID, bool mute)
{
  fMuteBox = NULL;
  fLabel = label;
  fLSliderView = new TSliderView (where, LEFT_HALF, label, l_value, view, l_ID);
  fRSliderView = new TSliderView (where, RIGHT_HALF, label, r_value, view, r_ID);

  fLSliderView->fPartner = fRSliderView;
  fRSliderView->fPartner = fLSliderView;
  fLSliderView->Split ();
  fRSliderView->Split ();
  view->AddChild (fLSliderView);
  view->AddChild (fRSliderView);
  if (muteID != -1) {
	BRect box (0, 0, 46, 16);
	box.OffsetBy (where + BPoint (-9, fLSliderView->fBackHeight + 10));
	fMuteBox = new BCheckBox (box, label, "Mute", new BMessage (muteID));
	fMuteBox->SetValue (mute);
	fMuteBox->SetTarget (view);
	view->AddChild (fMuteBox);
  }
}

TStereoSlider::~TStereoSlider ()
{
  delete fRSliderView;
  delete fLSliderView;
  if (fMuteBox)
	delete fMuteBox;
}

void
TStereoSlider::SetRValue (float value)
{
  fRSliderView->SetValue (value);
}

void
TStereoSlider::SetLValue (float value)
{
  fLSliderView->SetValue (value);
}

void
TStereoSlider::SetMute (bool mute)
{
  fMuteBox->SetValue (mute);
}

void
TStereoSlider::DrawLabel ()
{
  fLSliderView->DrawLabel (fLabel);
  BView* parent = fLSliderView->Parent();
  parent->SetFont (be_plain_font);
  parent->SetFontSize (9);
  parent->MovePenTo (fLSliderView->Frame().LeftBottom());
  parent->MovePenBy (4, 9);
  parent->DrawString ("L");
  parent->MovePenBy (8, 0);
  parent->DrawString ("R");
}

char back_bits[] = {
0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,
0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xff,0xff,0x1e,
0x1e,0x1e,0xa,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0xa,0x0,0x0,
0x0,0x0,0x0,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0xff,
0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0xa,
0x0,0x0,0x4,0x5,0x4,0xff,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,
0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,
0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,
0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,
0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,
0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,
0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,
0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,
0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0xa,0xa,0xa,0xa,0xa,
0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x5,0x4,0xff,0x1e,0x1e,0x1e,0x1e,
0x1e,0xa,0xa,0xa,0xa,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0xff,0xff,
0xff,0xff,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x5,0x4,0xff,0x1e,0x1e,
0x1e,0x1e,0x1e,0xff,0xff,0xff,0xff,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,
0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,
0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,
0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,
0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,
0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,
0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,
0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,
0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,
0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,
0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,
0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,
0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,
0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,
0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,
0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,
0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,
0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,
0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,
0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,
0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,
0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,
0xa,0xa,0xa,0xa,0xa,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x5,0x4,
0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0xa,0xa,0xa,0x13,0xff,0xff,0x1e,0x1e,
0x1e,0xa,0x13,0xff,0xff,0xff,0xff,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,
0x5,0x4,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0xff,0xff,0xff,0xff,0x13,0xff,0xff,
0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,
0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,
0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,
0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,
0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,
0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,
0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,
0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,
0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,
0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,
0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,
0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,
0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,
0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,
0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,
0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,
0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,
0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,
0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,
0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,
0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,
0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,
0xff,0x1e,0x1e,0x1e,0xa,0xa,0xa,0xa,0xa,0xa,0x1e,0x1e,0x1e,0x1e,0xa,
0x0,0x0,0x4,0x5,0x4,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0xa,0xa,0xa,
0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0xff,0xff,0xff,0xff,0x1e,0x1e,0x1e,
0x1e,0xa,0x0,0x0,0x4,0x5,0x4,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0xff,0xff,
0xff,0xff,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,
0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,
0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,
0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,
0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,
0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,
0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,
0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,
0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,
0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,
0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,
0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,
0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,
0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,
0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,
0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,
0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,
0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,
0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,
0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,
0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,
0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0xa,0xa,0xa,0xa,0xa,
0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x5,0x4,0xff,0x1e,0x1e,0x1e,0x1e,
0x1e,0xa,0xa,0xa,0xa,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0xff,0xff,
0xff,0xff,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x5,0x4,0xff,0x1e,0x1e,
0x1e,0x1e,0x1e,0xff,0xff,0xff,0xff,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,
0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,
0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,
0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,
0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,
0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,
0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,
0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,
0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,
0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,
0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,
0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,
0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,
0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,
0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,
0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,
0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,
0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,
0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,
0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,
0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,
0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,
0xa,0xa,0xa,0xa,0xa,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x5,0x4,
0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0xa,0xa,0xa,0x13,0xff,0xff,0x1e,0x1e,
0x1e,0xa,0x13,0xff,0xff,0xff,0xff,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,
0x5,0x4,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0xff,0xff,0xff,0xff,0x13,0xff,0xff,
0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,
0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,
0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,
0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,
0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,
0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,0x4,0x4,
0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,0xff,0x1e,
0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,0x0,0x0,
0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x13,0xff,
0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0xa,
0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x17,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0xa,0x0,0x0,0x4,0x4,0x5,0xff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
0x1e,0x1e,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xa,0x13,0x13,0x13,0x13,0x13,0x13,
0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,
0x13,0x13,0x13,0x13,0x13,0xff,0xff,0x1e,0x1e,0x1e,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x1e,0x1e,0x1e,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x1e,0x1e,0x1e};

char thumb_bits[] = {
0x15,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x1e,0x1e,0,0,
0x0d,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x00,0x0f,0,0,
0x0d,0x15,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x0f,0,0,
0x0d,0x15,0xff,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x13,0xff,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x11,0xff,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x11,0xff,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x0f,0xff,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x0f,0x1e,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x0c,0x1e,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x0d,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x0c,0x1b,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x0d,0x1b,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x0d,0x1b,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x0d,0x1e,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x0e,0x1e,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x0f,0x1e,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x13,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x0f,0xff,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x11,0xff,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x17,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x11,0xff,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x1b,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x15,0xff,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x1b,0xff,0xff,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x15,0xff,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x08,0x08,0x00,0x0f,0,0,
0x0d,0x15,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x0f,0,0,
0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x0f,0,0,
0x1e,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x1e,0,0};
