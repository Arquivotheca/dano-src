 # Local configure fragment for sysdeps/unix/sysv/linux.

# On Linux, the default is to use libio instead of stdio.
test $stdio = default && stdio=libio

# Don't bother trying to generate any glue code to be compatible with the
# existing system library, because we are the only system library.
inhibit_glue=yes

echo $ac_n "checking installed Linux kernel header files""... $ac_c" 1>&6
echo "configure:12: checking installed Linux kernel header files" >&5
if eval "test \"`echo '$''{'libc_cv_linux2010'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  cat > conftest.$ac_ext <<EOF
#line 17 "configure"
#include "confdefs.h"
#include <linux/version.h>
int main() {
#if LINUX_VERSION_CODE <  (2 *65536+ 0 *256+ 10) /* 2.0.10 */
eat flaming death
#endif
; return 0; }
EOF
if { (eval echo configure:26: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
  rm -rf conftest*
  libc_cv_linux2010='2.0.10 or later'
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  libc_cv_linux2010='TOO OLD!'
fi
rm -f conftest*
fi

echo "$ac_t""$libc_cv_linux2010" 1>&6
if test "$libc_cv_linux2010" != '2.0.10 or later'; then
  { echo "configure: error: GNU libc requires kernel header files from
Linux 2.0.10 or later to be installed before configuring.
The kernel header files are found usually in /usr/include/asm and
/usr/include/linux; make sure these directories use files from
Linux 2.0.10 or later.  This check uses <linux/version.h>, so
make sure that file was built correctly when installing the kernel header
files." 1>&2; exit 1; }
fi

# The Linux filesystem standard prescribes where to place "essential"
# files.  I.e., when the installation prefix is "/usr" we have to place
# shared library objects and the configuration files on the root partition
# in /lib and /etc.
if test "$prefix" = "/usr"; then
  libc_cv_slibdir="/lib"
  libc_cv_sysconfdir="/etc"
  libc_cv_rootsbindir="/sbin"
fi

# Under Linux the LinuxThreads and crypt add-on should be available.
case $add_ons in
  # Both are available.  Good.
  *linuxthreads*crypt* | *crypt*linuxthreads*)
    message=
    ;;
  *linuxthreads*)
    message="\
*** WARNING:
*** Are you sure you do not want to use the \`crypt' add-on?"
    ;;
  *crypt*)
    message="\
*** WARNING:
*** Are you sure you do not want to use the \`linuxthread' add-on?"
    ;;
  *)
    message="\
*** WARNING: Are you sure you do not want to use the \`linuxthreads'
*** and \`crypt' add-ons?"
    ;;
esac

if test "$message"; then
  if test $enable_sanity = yes; then
    echo "\
*** You should not compile the GNU libc without the \`linuxthreads' and
*** \`crypt' add-on.  Not using them risks to be incompatible with the
*** libraries of other systems.  Consider getting the add-ons and restart
*** the configuration.
*** If you really mean to avoid those add-ons run configure again, now
*** using the extra parameter \`--disable-sanity-checks'."
    exit 1
  else
    echo "$message"
  fi
fi

# Check whether `ldconfig' sources are available.  This will go away as soon
# as ldconfig is available in GNU libc.
if test -f $srcdir/elf/ldconfig.c; then
  has_ldconfig=yes
fi

# We need some extensions to the `ldd' script.

case "$machine" in
  i[3456]86* | m68* | sparc/sparc32)
    ldd_rewrite_script=../sysdeps/unix/sysv/linux/ldd-rewrite.sed
    ;;
  *)
    ;;
esac

