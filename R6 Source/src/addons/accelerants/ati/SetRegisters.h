///////////////////////////////////////////////////////////////////////////////
// Set Registers Header
//
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Defines ////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
// Register read and write macros used by my code.                         //
/////////////////////////////////////////////////////////////////////////////

#define WRITE_REG(X,Y);													\
	((volatile uint32 *) (regs))[X] = (Y);	
#define READ_REG(X,Y);													\
	Y = ((volatile uint32 *) (regs))[X];


/////////////////////////////////////////////////////////////////////////////
// Definitions used by Todd's register script routines.                    //
/////////////////////////////////////////////////////////////////////////////

// Field Values:
//
//       | Value[0]                         | Value[1]
// WRITE | Value to write to the register.  | Undefined.
// RMW   | Ones to write to the register.   | Mask ANDed with the register.
// DELAY | Inner loop cycles to wait.       | Outer loop cycles to wait.
// WAIT  | Value expected.                  | Mask ANDed with the register.
// FENCE | Undefined.                       | Undefined.

enum
{
  REGSET_WRITE,         // Generic stomp-it write.
  REGSET_RMW,           // For read-modify-write.
  REGSET_DELAY,         // For waiting a set time.  NIY
  REGSET_WAIT,          // For waiting on a register value.  NIY
  REGSET_FENCE = 0x8000
};

typedef struct
{
  uint32 Register;
  uint32 Value[2];
  uint32 Flags;
} REGSET_STRUCT;


///////////////////////////////////////////////////////////////////////////////
// Function Prototypes ////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

uint32 SetRegisters(REGSET_STRUCT *Table);


///////////////////////////////////////////////////////////////////////////////
// This Is The End Of The File ////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
