/* -*-c++-*- */
/* $Header: /devel/h3/Win95/dx/minivdd/plltable.h 3     8/27/98 11:08a Artg $ */
/*
** Copyright (c) 1995, 3Dfx Interactive, Inc.
** All Rights Reserved.
**
** This is UNPUBLISHED PROPRIETARY SOURCE CODE of 3Dfx Interactive, Inc.;
** the contents of this file may not be disclosed to third parties, copied or
** duplicated in any form, in whole or in part, without the prior written
** permission of 3Dfx Interactive, Inc.
**
** RESTRICTED RIGHTS LEGEND:
** Use, duplication or disclosure by the Government is subject to restrictions
** as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
** and Computer Software clause at DFARS 252.227-7013, and/or in similar or
** successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished  -
** rights reserved under the Copyright Laws of the United States.
**
**
** $Revision: 3 $
** $Date: 8/27/98 11:08a $
**
** $History: plltable.h $
** 
** *****************  Version 3  *****************
** User: Artg         Date: 8/27/98    Time: 11:08a
** Updated in $/devel/h3/Win95/dx/minivdd
** added guard ifdef for redundant plltable define.
** 
** *****************  Version 2  *****************
** User: Ken          Date: 4/15/98    Time: 6:42p
** Updated in $/devel/h3/win95/dx/minivdd
** added unified header to all files, with revision, etc. info in it
**
*/

//
// generated by gen_plltable.pl at Thu Apr  9 18:44:30 1998
//

#define MIN_PLL_FREQ 30
#define MAX_PLL_FREQ 120

uint32 _pllTable[] = {
//	   pllCtrl        n   m   k actual(MHz)
//	   -------      --- --- --- -----------
	0x00006B2E,  // 107  11   2 30.013108
	0x00001806,  //  24   1   2 31.022723
	0x00007B32,  // 123  12   2 31.960223
	0x0000511E,  //  81   7   2 33.011359
	0x0000240A,  //  36   2   2 34.005677
	0x0000561E,  //  86   7   2 34.999996
	0x0000772A,  // 119  10   2 36.093745
	0x00001D06,  //  29   1   2 36.988632
	0x0000531A,  //  83   6   2 38.032666
	0x00006B22,  // 107   8   2 39.017041
	0x00007926,  // 121   9   2 40.025821
	0x00007C26,  // 124   9   2 41.002061
	0x00002D0A,  //  45   2   2 42.059654
	0x00002206,  //  34   1   2 42.954540
	0x00005416,  //  84   5   2 43.977267
	0x00005616,  //  86   5   2 44.999994
	0x00005816,  //  88   5   2 46.022721
	0x0000671A,  // 103   6   2 46.981528
	0x0000410E,  //  65   3   2 47.965903
	0x00002706,  //  39   1   2 48.920448
	0x00002806,  //  40   1   2 50.113630
	0x0000370A,  //  55   2   2 51.008516
	0x0000380A,  //  56   2   2 51.903402
	0x0000480E,  //  72   3   2 52.977266
	0x0000771A,  // 119   6   2 54.140618
	0x0000791A,  // 121   6   2 55.035504
	0x00007B1A,  // 123   6   2 55.930391
	0x00007D1A,  // 125   6   2 56.825277
	0x00004F0E,  //  79   3   2 57.988629
	0x0000400A,  //  64   2   2 59.062492
	0x00006B2D,  // 107  11   1 60.026216
	0x00007E35,  // 126  13   1 61.090901
	0x00001805,  //  24   1   1 62.045447
	0x00002A0D,  //  42   3   1 62.999992
	0x00007B31,  // 123  12   1 63.920446
	0x0000742D,  // 116  11   1 64.982509
	0x0000511D,  //  81   7   1 66.022719
	0x00006525,  // 101   9   1 67.035115
	0x00002409,  //  36   2   1 68.011355
	0x00006825,  // 104   9   1 68.987595
	0x0000561D,  //  86   7   1 69.999991
	0x00007529,  // 117  10   1 70.994309
	0x00007729,  // 119  10   1 72.187491
	0x0000310D,  //  49   3   1 73.022718
	0x00001D05,  //  29   1   1 73.977263
	0x00007125,  // 113   9   1 74.845032
	0x00005319,  //  83   6   1 76.065331
	0x00002909,  //  41   2   1 76.960217
	0x00006B21,  // 107   8   1 78.034081
	0x00001F05,  //  31   1   1 78.749990
	0x00007925,  // 121   9   1 80.051643
	0x00006F21,  // 111   8   1 80.897717
	0x00007C25,  // 124   9   1 82.004122
	0x0000380D,  //  56   3   1 83.045444
	0x00002D09,  //  45   2   1 84.119308
	0x00005D19,  //  93   6   1 85.014194
	0x00002205,  //  34   1   1 85.909080
	0x00005315,  //  83   5   1 86.931807
	0x00005415,  //  84   5   1 87.954534
	0x00005515,  //  85   5   1 88.977261
	0x00005615,  //  86   5   1 89.999989
	0x00005715,  //  87   5   1 91.022716
	0x00005815,  //  88   5   1 92.045443
	0x00002505,  //  37   1   1 93.068170
	0x00006719,  // 103   6   1 93.963056
	0x00005B15,  //  91   5   1 95.113624
	0x0000410D,  //  65   3   1 95.931806
	0x0000781D,  // 120   7   1 97.045442
	0x00002705,  //  39   1   1 97.840897
	0x00005111,  //  81   4   1 99.034078
	0x00002805,  //  40   1   1 100.227260
	0x00007D1D,  // 125   7   1 101.022714
	0x00003709,  //  55   2   1 102.017033
	0x00007119,  // 113   6   1 102.911919
	0x00003809,  //  56   2   1 103.806805
	0x00002A05,  //  42   1   1 104.999987
	0x0000480D,  //  72   3   1 105.954532
	0x00002B05,  //  43   1   1 107.386350
	0x00007719,  // 119   6   1 108.281236
	0x00003B09,  //  59   2   1 109.176123
	0x00007919,  // 121   6   1 110.071009
	0x00003C09,  //  60   2   1 110.965895
	0x00007B19,  // 123   6   1 111.860781
	0x00004D0D,  //  77   3   1 113.113622
	0x00007D19,  // 125   6   1 113.650554
	0x00002E05,  //  46   1   1 114.545440
	0x00004F0D,  //  79   3   1 115.977258
	0x00002F05,  //  47   1   1 116.931803
	0x00004009,  //  64   2   1 118.124985
	0x0000510D,  //  81   3   1 118.840894
	0x00006B2C,  // 107  11   0 120.052432
};
uint32 *pllTable = (uint32*) (_pllTable - MIN_PLL_FREQ);

