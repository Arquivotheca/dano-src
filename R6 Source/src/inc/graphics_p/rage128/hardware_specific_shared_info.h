//////////////////////////////////////////////////////////////////////////////
// Hardware-Specific Shared Info Structure Definition
//
//    This file defines the extension to SHARED_INFO that contains hardware-
// -specific variables and parameters.
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// Macros ////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//    This macro should be set to zero if no hardware-specific component for
// the SHARED_INFO structure is to be defined, and nonzero if it _is_ to be
// defined. This prevents the compiler from barfing when an empty hardware-
// -specific structure is defined.

#define HARDWARE_SPECIFIC_SI_EXISTS 1

//////////////////////////////////////////////////////////////////////////////
// Typedefs //////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// Hardware-Specific Shared Info
//    Hardware-specific information for one graphics device that is shared
// between the kernel driver and accelerant instances.

// Define this structure only if it is non-empty.
#if HARDWARE_SPECIFIC_SI_EXISTS

// User defined shared info structure.  This is appended to the
// shared info structure, and is accessed via .hw_specific;
typedef struct
{
	area_id 	rom_area;		// size of memory apperature for bios rom
	unsigned int *rom_ptr;		// pointer to accessible ati bios rom 
	float 		CrystalFreq;	// crystal frequency in Mhz
  // No additional information needed.
} HARDWARE_SPECIFIC_SHARED_INFO;

#endif


//////////////////////////////////////////////////////////////////////////////
// This Is The End Of The File ///////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
